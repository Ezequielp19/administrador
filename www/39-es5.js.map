{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-textarea.entry.js"],"names":["textareaIosCss","textareaMdCss","Textarea","hostRef","ionChange","ionInput","ionStyle","ionBlur","ionFocus","inputId","textareaIds","didBlurAfterEdit","inheritedAttributes","fireFocusEvents","hasFocus","autocapitalize","autofocus","clearOnEdit","debounce","disabled","name","readonly","required","spellcheck","autoGrow","value","onInput","ev","nativeInput","emitStyle","emit","onFocus","focusChange","onBlur","onKeyDown","checkClearOnEdit","getValue","runAutoGrow","debounceChanged","document","dispatchEvent","CustomEvent","detail","el","Object","assign","style","height","scrollHeight","textareaWrapper","focus","blur","Promise","resolve","placeholder","hasValue","mode","labelId","label","id","color","ref","autoCapitalize","autoFocus","enterKeyHint","enterkeyhint","inputMode","inputmode","maxLength","maxlength","minLength","minlength","readOnly","cols","rows","wrap","ios","md"],"mappings":"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","file":"39-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, f as readTask, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\r\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\r\nimport { f as debounceEvent, i as inheritAriaAttributes, h as inheritAttributes, r as raf, j as findItemLabel } from './helpers-1457892a.js';\r\nimport { c as createColorClasses } from './theme-ff3fc52f.js';\r\n\r\nconst textareaIosCss = \".sc-ion-textarea-ios-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);white-space:pre-wrap;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}.ion-color.sc-ion-textarea-ios-h{background:initial}.ion-color.sc-ion-textarea-ios-h{color:var(--ion-color-base)}ion-item.sc-ion-textarea-ios-h,ion-item .sc-ion-textarea-ios-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-ios-h:not(.item-label),ion-item:not(.item-label) .sc-ion-textarea-ios-h{--padding-start:0}.textarea-wrapper.sc-ion-textarea-ios{min-width:inherit;max-width:inherit;min-height:inherit;max-height:inherit}.native-textarea.sc-ion-textarea-ios{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-textarea.sc-ion-textarea-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-ios::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-ios::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-ios{opacity:0.4}.cloned-input.sc-ion-textarea-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-ios .cloned-input.sc-ion-textarea-ios,[dir=rtl].sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios,[dir=rtl] .sc-ion-textarea-ios-h .cloned-input.sc-ion-textarea-ios{left:unset;right:unset;right:0}.item-label-floating.item-has-placeholder.sc-ion-textarea-ios-h:not(.item-has-value),.item-label-floating.item-has-placeholder:not(.item-has-value) .sc-ion-textarea-ios-h{opacity:0}.item-label-floating.item-has-placeholder.sc-ion-textarea-ios-h:not(.item-has-value).item-has-focus,.item-label-floating.item-has-placeholder:not(.item-has-value).item-has-focus .sc-ion-textarea-ios-h{-webkit-transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);opacity:1}.sc-ion-textarea-ios-h{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-stacked.sc-ion-textarea-ios-h,.item-label-stacked .sc-ion-textarea-ios-h,.item-label-floating.sc-ion-textarea-ios-h,.item-label-floating .sc-ion-textarea-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}\";\r\n\r\nconst textareaMdCss = \".sc-ion-textarea-md-h{--background:initial;--color:initial;--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--border-radius:0;display:block;position:relative;-ms-flex:1;flex:1;width:100%;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);white-space:pre-wrap;z-index:2;-webkit-box-sizing:border-box;box-sizing:border-box}.ion-color.sc-ion-textarea-md-h{background:initial}.ion-color.sc-ion-textarea-md-h{color:var(--ion-color-base)}ion-item.sc-ion-textarea-md-h,ion-item .sc-ion-textarea-md-h{-ms-flex-item-align:baseline;align-self:baseline}ion-item.sc-ion-textarea-md-h:not(.item-label),ion-item:not(.item-label) .sc-ion-textarea-md-h{--padding-start:0}.textarea-wrapper.sc-ion-textarea-md{min-width:inherit;max-width:inherit;min-height:inherit;max-height:inherit}.native-textarea.sc-ion-textarea-md{border-radius:var(--border-radius);margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:block;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;resize:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-textarea.sc-ion-textarea-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-textarea.sc-ion-textarea-md::-webkit-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-moz-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md:-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::-ms-input-placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea.sc-ion-textarea-md::placeholder{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-textarea[disabled].sc-ion-textarea-md{opacity:0.4}.cloned-input.sc-ion-textarea-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-textarea-md .cloned-input.sc-ion-textarea-md,[dir=rtl].sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md,[dir=rtl] .sc-ion-textarea-md-h .cloned-input.sc-ion-textarea-md{left:unset;right:unset;right:0}.item-label-floating.item-has-placeholder.sc-ion-textarea-md-h:not(.item-has-value),.item-label-floating.item-has-placeholder:not(.item-has-value) .sc-ion-textarea-md-h{opacity:0}.item-label-floating.item-has-placeholder.sc-ion-textarea-md-h:not(.item-has-value).item-has-focus,.item-label-floating.item-has-placeholder:not(.item-has-value).item-has-focus .sc-ion-textarea-md-h{-webkit-transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);opacity:1}.sc-ion-textarea-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:11px;--padding-start:8px;margin-left:0;margin-right:0;margin-top:8px;margin-bottom:0;font-size:inherit}.item-label-stacked.sc-ion-textarea-md-h,.item-label-stacked .sc-ion-textarea-md-h,.item-label-floating.sc-ion-textarea-md-h,.item-label-floating .sc-ion-textarea-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}\";\r\n\r\nconst Textarea = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionChange = createEvent(this, \"ionChange\", 7);\r\n    this.ionInput = createEvent(this, \"ionInput\", 7);\r\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\r\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\r\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\r\n    this.inputId = `ion-textarea-${textareaIds++}`;\r\n    this.didBlurAfterEdit = false;\r\n    this.inheritedAttributes = {};\r\n    /**\r\n     * This is required for a WebKit bug which requires us to\r\n     * blur and focus an input to properly focus the input in\r\n     * an item with delegatesFocus. It will no longer be needed\r\n     * with iOS 14.\r\n     *\r\n     * @internal\r\n     */\r\n    this.fireFocusEvents = true;\r\n    this.hasFocus = false;\r\n    /**\r\n     * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\r\n     */\r\n    this.autocapitalize = 'none';\r\n    /**\r\n     * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\r\n     */\r\n    this.autofocus = false;\r\n    /**\r\n     * If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.\r\n     */\r\n    this.clearOnEdit = false;\r\n    /**\r\n     * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`.\r\n     */\r\n    this.debounce = 0;\r\n    /**\r\n     * If `true`, the user cannot interact with the textarea.\r\n     */\r\n    this.disabled = false;\r\n    /**\r\n     * The name of the control, which is submitted with the form data.\r\n     */\r\n    this.name = this.inputId;\r\n    /**\r\n     * If `true`, the user cannot modify the value.\r\n     */\r\n    this.readonly = false;\r\n    /**\r\n     * If `true`, the user must fill in a value before submitting a form.\r\n     */\r\n    this.required = false;\r\n    /**\r\n     * If `true`, the element will have its spelling and grammar checked.\r\n     */\r\n    this.spellcheck = false;\r\n    /**\r\n     * If `true`, the element height will increase based on the value.\r\n     */\r\n    this.autoGrow = false;\r\n    /**\r\n     * The value of the textarea.\r\n     */\r\n    this.value = '';\r\n    this.onInput = (ev) => {\r\n      if (this.nativeInput) {\r\n        this.value = this.nativeInput.value;\r\n      }\r\n      this.emitStyle();\r\n      this.ionInput.emit(ev);\r\n    };\r\n    this.onFocus = (ev) => {\r\n      this.hasFocus = true;\r\n      this.focusChange();\r\n      if (this.fireFocusEvents) {\r\n        this.ionFocus.emit(ev);\r\n      }\r\n    };\r\n    this.onBlur = (ev) => {\r\n      this.hasFocus = false;\r\n      this.focusChange();\r\n      if (this.fireFocusEvents) {\r\n        this.ionBlur.emit(ev);\r\n      }\r\n    };\r\n    this.onKeyDown = () => {\r\n      this.checkClearOnEdit();\r\n    };\r\n  }\r\n  debounceChanged() {\r\n    this.ionChange = debounceEvent(this.ionChange, this.debounce);\r\n  }\r\n  disabledChanged() {\r\n    this.emitStyle();\r\n  }\r\n  /**\r\n   * Update the native input element when the value changes\r\n   */\r\n  valueChanged() {\r\n    const nativeInput = this.nativeInput;\r\n    const value = this.getValue();\r\n    if (nativeInput && nativeInput.value !== value) {\r\n      nativeInput.value = value;\r\n    }\r\n    this.runAutoGrow();\r\n    this.emitStyle();\r\n    this.ionChange.emit({ value });\r\n  }\r\n  connectedCallback() {\r\n    this.emitStyle();\r\n    this.debounceChanged();\r\n    {\r\n      document.dispatchEvent(new CustomEvent('ionInputDidLoad', {\r\n        detail: this.el\r\n      }));\r\n    }\r\n  }\r\n  disconnectedCallback() {\r\n    {\r\n      document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\r\n        detail: this.el\r\n      }));\r\n    }\r\n  }\r\n  componentWillLoad() {\r\n    this.inheritedAttributes = Object.assign(Object.assign({}, inheritAriaAttributes(this.el)), inheritAttributes(this.el, ['title']));\r\n  }\r\n  componentDidLoad() {\r\n    raf(() => this.runAutoGrow());\r\n  }\r\n  runAutoGrow() {\r\n    const nativeInput = this.nativeInput;\r\n    if (nativeInput && this.autoGrow) {\r\n      readTask(() => {\r\n        nativeInput.style.height = 'auto';\r\n        nativeInput.style.height = nativeInput.scrollHeight + 'px';\r\n        if (this.textareaWrapper) {\r\n          this.textareaWrapper.style.height = nativeInput.scrollHeight + 'px';\r\n        }\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * Sets focus on the native `textarea` in `ion-textarea`. Use this method instead of the global\r\n   * `textarea.focus()`.\r\n   */\r\n  async setFocus() {\r\n    if (this.nativeInput) {\r\n      this.nativeInput.focus();\r\n    }\r\n  }\r\n  /**\r\n   * Sets blur on the native `textarea` in `ion-textarea`. Use this method instead of the global\r\n   * `textarea.blur()`.\r\n   * @internal\r\n   */\r\n  async setBlur() {\r\n    if (this.nativeInput) {\r\n      this.nativeInput.blur();\r\n    }\r\n  }\r\n  /**\r\n   * Returns the native `<textarea>` element used under the hood.\r\n   */\r\n  getInputElement() {\r\n    return Promise.resolve(this.nativeInput);\r\n  }\r\n  emitStyle() {\r\n    this.ionStyle.emit({\r\n      'interactive': true,\r\n      'textarea': true,\r\n      'input': true,\r\n      'interactive-disabled': this.disabled,\r\n      'has-placeholder': this.placeholder != null,\r\n      'has-value': this.hasValue(),\r\n      'has-focus': this.hasFocus\r\n    });\r\n  }\r\n  /**\r\n   * Check if we need to clear the text input if clearOnEdit is enabled\r\n   */\r\n  checkClearOnEdit() {\r\n    if (!this.clearOnEdit) {\r\n      return;\r\n    }\r\n    // Did the input value change after it was blurred and edited?\r\n    if (this.didBlurAfterEdit && this.hasValue()) {\r\n      // Clear the input\r\n      this.value = '';\r\n    }\r\n    // Reset the flag\r\n    this.didBlurAfterEdit = false;\r\n  }\r\n  focusChange() {\r\n    // If clearOnEdit is enabled and the input blurred but has a value, set a flag\r\n    if (this.clearOnEdit && !this.hasFocus && this.hasValue()) {\r\n      this.didBlurAfterEdit = true;\r\n    }\r\n    this.emitStyle();\r\n  }\r\n  hasValue() {\r\n    return this.getValue() !== '';\r\n  }\r\n  getValue() {\r\n    return this.value || '';\r\n  }\r\n  render() {\r\n    const mode = getIonMode(this);\r\n    const value = this.getValue();\r\n    const labelId = this.inputId + '-lbl';\r\n    const label = findItemLabel(this.el);\r\n    if (label) {\r\n      label.id = labelId;\r\n    }\r\n    return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: createColorClasses(this.color, {\r\n        [mode]: true,\r\n      }) }, h(\"div\", { class: \"textarea-wrapper\", ref: el => this.textareaWrapper = el }, h(\"textarea\", Object.assign({ class: \"native-textarea\", \"aria-labelledby\": label ? labelId : null, ref: el => this.nativeInput = el, autoCapitalize: this.autocapitalize, autoFocus: this.autofocus, enterKeyHint: this.enterkeyhint, inputMode: this.inputmode, disabled: this.disabled, maxLength: this.maxlength, minLength: this.minlength, name: this.name, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellcheck: this.spellcheck, cols: this.cols, rows: this.rows, wrap: this.wrap, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeyDown }, this.inheritedAttributes), value))));\r\n  }\r\n  get el() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"debounce\": [\"debounceChanged\"],\r\n    \"disabled\": [\"disabledChanged\"],\r\n    \"value\": [\"valueChanged\"]\r\n  }; }\r\n};\r\nlet textareaIds = 0;\r\nTextarea.style = {\r\n  ios: textareaIosCss,\r\n  md: textareaMdCss\r\n};\r\n\r\nexport { Textarea as ion_textarea };\r\n"]}