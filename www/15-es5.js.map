{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-input.entry.js"],"names":["inputIosCss","inputMdCss","Input","hostRef","ionInput","ionChange","ionBlur","ionFocus","ionStyle","inputId","inputIds","didBlurAfterEdit","inheritedAttributes","fireFocusEvents","hasFocus","autocapitalize","autocomplete","autocorrect","autofocus","clearInput","debounce","disabled","name","readonly","required","spellcheck","type","value","onInput","ev","input","target","emit","onBlur","focusChanged","emitStyle","onFocus","onKeydown","shouldClearOnEdit","hasValue","key","clearTextInput","clearTextOnEnter","preventDefault","stopPropagation","setFocus","nativeInput","toString","Object","assign","el","debounceChanged","document","dispatchEvent","CustomEvent","detail","focus","blur","Promise","resolve","clearOnEdit","undefined","placeholder","getValue","length","mode","labelId","label","id","color","ref","accept","autoCapitalize","autoComplete","autoCorrect","autoFocus","enterKeyHint","enterkeyhint","inputMode","inputmode","min","max","minLength","minlength","maxLength","maxlength","multiple","pattern","readOnly","step","size","onKeyDown","onTouchStart","onMouseDown","style","ios","md"],"mappings":"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","file":"15-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\r\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\r\nimport { f as debounceEvent, i as inheritAriaAttributes, h as inheritAttributes, j as findItemLabel } from './helpers-1457892a.js';\r\nimport { c as createColorClasses } from './theme-ff3fc52f.js';\r\n\r\nconst inputIosCss = \".sc-ion-input-ios-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0 !important;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item.sc-ion-input-ios-h:not(.item-label),ion-item:not(.item-label) .sc-ion-input-ios-h{--padding-start:0}.ion-color.sc-ion-input-ios-h{color:var(--ion-color-base)}.native-input.sc-ion-input-ios{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-input.sc-ion-input-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-ios:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-ios::-ms-clear{display:none}.native-input[disabled].sc-ion-input-ios{opacity:0.4}.cloned-input.sc-ion-input-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-ios .cloned-input.sc-ion-input-ios,[dir=rtl].sc-ion-input-ios-h .cloned-input.sc-ion-input-ios,[dir=rtl] .sc-ion-input-ios-h .cloned-input.sc-ion-input-ios{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.input-clear-icon.sc-ion-input-ios:focus{opacity:0.5}.has-value.sc-ion-input-ios-h .input-clear-icon.sc-ion-input-ios{visibility:visible}.has-focus.sc-ion-input-ios-h{pointer-events:none}.has-focus.sc-ion-input-ios-h input.sc-ion-input-ios,.has-focus.sc-ion-input-ios-h a.sc-ion-input-ios,.has-focus.sc-ion-input-ios-h button.sc-ion-input-ios{pointer-events:auto}.item-label-floating.item-has-placeholder.sc-ion-input-ios-h:not(.item-has-value),.item-label-floating.item-has-placeholder:not(.item-has-value) .sc-ion-input-ios-h{opacity:0}.item-label-floating.item-has-placeholder.sc-ion-input-ios-h:not(.item-has-value).item-has-focus,.item-label-floating.item-has-placeholder:not(.item-has-value).item-has-focus .sc-ion-input-ios-h{-webkit-transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);opacity:1}.sc-ion-input-ios-h{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-stacked.sc-ion-input-ios-h,.item-label-stacked .sc-ion-input-ios-h,.item-label-floating.sc-ion-input-ios-h,.item-label-floating .sc-ion-input-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}.input-clear-icon.sc-ion-input-ios{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20512%20512'><path%20fill='var(--ion-color-step-600,%20%23666666)'%20d='M403.1,108.9c-81.2-81.2-212.9-81.2-294.2,0s-81.2,212.9,0,294.2c81.2,81.2,212.9,81.2,294.2,0S484.3,190.1,403.1,108.9z%20M352,340.2L340.2,352l-84.4-84.2l-84,83.8L160,339.8l84-83.8l-84-83.8l11.8-11.8l84,83.8l84.4-84.2l11.8,11.8L267.6,256L352,340.2z'/></svg>\\\");width:30px;height:30px;background-size:18px}\";\r\n\r\nconst inputMdCss = \".sc-ion-input-md-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0 !important;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item.sc-ion-input-md-h:not(.item-label),ion-item:not(.item-label) .sc-ion-input-md-h{--padding-start:0}.ion-color.sc-ion-input-md-h{color:var(--ion-color-base)}.native-input.sc-ion-input-md{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-input.sc-ion-input-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-md::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-md:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-md::-ms-clear{display:none}.native-input[disabled].sc-ion-input-md{opacity:0.4}.cloned-input.sc-ion-input-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-md .cloned-input.sc-ion-input-md,[dir=rtl].sc-ion-input-md-h .cloned-input.sc-ion-input-md,[dir=rtl] .sc-ion-input-md-h .cloned-input.sc-ion-input-md{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.input-clear-icon.sc-ion-input-md:focus{opacity:0.5}.has-value.sc-ion-input-md-h .input-clear-icon.sc-ion-input-md{visibility:visible}.has-focus.sc-ion-input-md-h{pointer-events:none}.has-focus.sc-ion-input-md-h input.sc-ion-input-md,.has-focus.sc-ion-input-md-h a.sc-ion-input-md,.has-focus.sc-ion-input-md-h button.sc-ion-input-md{pointer-events:auto}.item-label-floating.item-has-placeholder.sc-ion-input-md-h:not(.item-has-value),.item-label-floating.item-has-placeholder:not(.item-has-value) .sc-ion-input-md-h{opacity:0}.item-label-floating.item-has-placeholder.sc-ion-input-md-h:not(.item-has-value).item-has-focus,.item-label-floating.item-has-placeholder:not(.item-has-value).item-has-focus .sc-ion-input-md-h{-webkit-transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);transition:opacity 0.15s cubic-bezier(0.4, 0, 0.2, 1);opacity:1}.sc-ion-input-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:10px;--padding-start:8px;font-size:inherit}.item-label-stacked.sc-ion-input-md-h,.item-label-stacked .sc-ion-input-md-h,.item-label-floating.sc-ion-input-md-h,.item-label-floating .sc-ion-input-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}.input-clear-icon.sc-ion-input-md{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20512%20512'><polygon%20fill='var(--ion-color-step-600,%20%23666666)'%20points='405,136.798%20375.202,107%20256,226.202%20136.798,107%20107,136.798%20226.202,256%20107,375.202%20136.798,405%20256,285.798%20375.202,405%20405,375.202%20285.798,256'/></svg>\\\");width:30px;height:30px;background-size:22px}\";\r\n\r\nconst Input = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionInput = createEvent(this, \"ionInput\", 7);\r\n    this.ionChange = createEvent(this, \"ionChange\", 7);\r\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\r\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\r\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\r\n    this.inputId = `ion-input-${inputIds++}`;\r\n    this.didBlurAfterEdit = false;\r\n    this.inheritedAttributes = {};\r\n    /**\r\n     * This is required for a WebKit bug which requires us to\r\n     * blur and focus an input to properly focus the input in\r\n     * an item with delegatesFocus. It will no longer be needed\r\n     * with iOS 14.\r\n     *\r\n     * @internal\r\n     */\r\n    this.fireFocusEvents = true;\r\n    this.hasFocus = false;\r\n    /**\r\n     * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\r\n     * Available options: `\"off\"`, `\"none\"`, `\"on\"`, `\"sentences\"`, `\"words\"`, `\"characters\"`.\r\n     */\r\n    this.autocapitalize = 'off';\r\n    /**\r\n     * Indicates whether the value of the control can be automatically completed by the browser.\r\n     */\r\n    this.autocomplete = 'off';\r\n    /**\r\n     * Whether auto correction should be enabled when the user is entering/editing the text value.\r\n     */\r\n    this.autocorrect = 'off';\r\n    /**\r\n     * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\r\n     */\r\n    this.autofocus = false;\r\n    /**\r\n     * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\r\n     */\r\n    this.clearInput = false;\r\n    /**\r\n     * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`.\r\n     */\r\n    this.debounce = 0;\r\n    /**\r\n     * If `true`, the user cannot interact with the input.\r\n     */\r\n    this.disabled = false;\r\n    /**\r\n     * The name of the control, which is submitted with the form data.\r\n     */\r\n    this.name = this.inputId;\r\n    /**\r\n     * If `true`, the user cannot modify the value.\r\n     */\r\n    this.readonly = false;\r\n    /**\r\n     * If `true`, the user must fill in a value before submitting a form.\r\n     */\r\n    this.required = false;\r\n    /**\r\n     * If `true`, the element will have its spelling and grammar checked.\r\n     */\r\n    this.spellcheck = false;\r\n    /**\r\n     * The type of control to display. The default type is text.\r\n     */\r\n    this.type = 'text';\r\n    /**\r\n     * The value of the input.\r\n     */\r\n    this.value = '';\r\n    this.onInput = (ev) => {\r\n      const input = ev.target;\r\n      if (input) {\r\n        this.value = input.value || '';\r\n      }\r\n      this.ionInput.emit(ev);\r\n    };\r\n    this.onBlur = (ev) => {\r\n      this.hasFocus = false;\r\n      this.focusChanged();\r\n      this.emitStyle();\r\n      if (this.fireFocusEvents) {\r\n        this.ionBlur.emit(ev);\r\n      }\r\n    };\r\n    this.onFocus = (ev) => {\r\n      this.hasFocus = true;\r\n      this.focusChanged();\r\n      this.emitStyle();\r\n      if (this.fireFocusEvents) {\r\n        this.ionFocus.emit(ev);\r\n      }\r\n    };\r\n    this.onKeydown = (ev) => {\r\n      if (this.shouldClearOnEdit()) {\r\n        // Did the input value change after it was blurred and edited?\r\n        // Do not clear if user is hitting Enter to submit form\r\n        if (this.didBlurAfterEdit && this.hasValue() && ev.key !== 'Enter') {\r\n          // Clear the input\r\n          this.clearTextInput();\r\n        }\r\n        // Reset the flag\r\n        this.didBlurAfterEdit = false;\r\n      }\r\n    };\r\n    this.clearTextOnEnter = (ev) => {\r\n      if (ev.key === 'Enter') {\r\n        this.clearTextInput(ev);\r\n      }\r\n    };\r\n    this.clearTextInput = (ev) => {\r\n      if (this.clearInput && !this.readonly && !this.disabled && ev) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        // Attempt to focus input again after pressing clear button\r\n        this.setFocus();\r\n      }\r\n      this.value = '';\r\n      /**\r\n       * This is needed for clearOnEdit\r\n       * Otherwise the value will not be cleared\r\n       * if user is inside the input\r\n       */\r\n      if (this.nativeInput) {\r\n        this.nativeInput.value = '';\r\n      }\r\n    };\r\n  }\r\n  debounceChanged() {\r\n    this.ionChange = debounceEvent(this.ionChange, this.debounce);\r\n  }\r\n  disabledChanged() {\r\n    this.emitStyle();\r\n  }\r\n  /**\r\n   * Update the item classes when the placeholder changes\r\n   */\r\n  placeholderChanged() {\r\n    this.emitStyle();\r\n  }\r\n  /**\r\n   * Update the native input element when the value changes\r\n   */\r\n  valueChanged() {\r\n    this.emitStyle();\r\n    this.ionChange.emit({ value: this.value == null ? this.value : this.value.toString() });\r\n  }\r\n  componentWillLoad() {\r\n    this.inheritedAttributes = Object.assign(Object.assign({}, inheritAriaAttributes(this.el)), inheritAttributes(this.el, ['tabindex', 'title']));\r\n  }\r\n  connectedCallback() {\r\n    this.emitStyle();\r\n    this.debounceChanged();\r\n    {\r\n      document.dispatchEvent(new CustomEvent('ionInputDidLoad', {\r\n        detail: this.el\r\n      }));\r\n    }\r\n  }\r\n  disconnectedCallback() {\r\n    {\r\n      document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\r\n        detail: this.el\r\n      }));\r\n    }\r\n  }\r\n  /**\r\n   * Sets focus on the native `input` in `ion-input`. Use this method instead of the global\r\n   * `input.focus()`.\r\n   */\r\n  async setFocus() {\r\n    if (this.nativeInput) {\r\n      this.nativeInput.focus();\r\n    }\r\n  }\r\n  /**\r\n   * Sets blur on the native `input` in `ion-input`. Use this method instead of the global\r\n   * `input.blur()`.\r\n   * @internal\r\n   */\r\n  async setBlur() {\r\n    if (this.nativeInput) {\r\n      this.nativeInput.blur();\r\n    }\r\n  }\r\n  /**\r\n   * Returns the native `<input>` element used under the hood.\r\n   */\r\n  getInputElement() {\r\n    return Promise.resolve(this.nativeInput);\r\n  }\r\n  shouldClearOnEdit() {\r\n    const { type, clearOnEdit } = this;\r\n    return (clearOnEdit === undefined)\r\n      ? type === 'password'\r\n      : clearOnEdit;\r\n  }\r\n  getValue() {\r\n    return typeof this.value === 'number' ? this.value.toString() :\r\n      (this.value || '').toString();\r\n  }\r\n  emitStyle() {\r\n    this.ionStyle.emit({\r\n      'interactive': true,\r\n      'input': true,\r\n      'has-placeholder': this.placeholder != null,\r\n      'has-value': this.hasValue(),\r\n      'has-focus': this.hasFocus,\r\n      'interactive-disabled': this.disabled,\r\n    });\r\n  }\r\n  focusChanged() {\r\n    // If clearOnEdit is enabled and the input blurred but has a value, set a flag\r\n    if (!this.hasFocus && this.shouldClearOnEdit() && this.hasValue()) {\r\n      this.didBlurAfterEdit = true;\r\n    }\r\n  }\r\n  hasValue() {\r\n    return this.getValue().length > 0;\r\n  }\r\n  render() {\r\n    const mode = getIonMode(this);\r\n    const value = this.getValue();\r\n    const labelId = this.inputId + '-lbl';\r\n    const label = findItemLabel(this.el);\r\n    if (label) {\r\n      label.id = labelId;\r\n    }\r\n    return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: createColorClasses(this.color, {\r\n        [mode]: true,\r\n        'has-value': this.hasValue(),\r\n        'has-focus': this.hasFocus\r\n      }) }, h(\"input\", Object.assign({ class: \"native-input\", ref: input => this.nativeInput = input, \"aria-labelledby\": label ? labelId : null, disabled: this.disabled, accept: this.accept, autoCapitalize: this.autocapitalize, autoComplete: this.autocomplete, autoCorrect: this.autocorrect, autoFocus: this.autofocus, enterKeyHint: this.enterkeyhint, inputMode: this.inputmode, min: this.min, max: this.max, minLength: this.minlength, maxLength: this.maxlength, multiple: this.multiple, name: this.name, pattern: this.pattern, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellcheck: this.spellcheck, step: this.step, size: this.size, type: this.type, value: value, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeydown }, this.inheritedAttributes)), (this.clearInput && !this.readonly && !this.disabled) && h(\"button\", { \"aria-label\": \"reset\", type: \"button\", class: \"input-clear-icon\", onTouchStart: this.clearTextInput, onMouseDown: this.clearTextInput, onKeyDown: this.clearTextOnEnter })));\r\n  }\r\n  get el() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"debounce\": [\"debounceChanged\"],\r\n    \"disabled\": [\"disabledChanged\"],\r\n    \"placeholder\": [\"placeholderChanged\"],\r\n    \"value\": [\"valueChanged\"]\r\n  }; }\r\n};\r\nlet inputIds = 0;\r\nInput.style = {\r\n  ios: inputIosCss,\r\n  md: inputMdCss\r\n};\r\n\r\nexport { Input as ion_input };\r\n"]}