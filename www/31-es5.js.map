{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-segment_2.entry.js"],"names":["segmentIosCss","segmentMdCss","Segment","hostRef","ionChange","ionSelect","ionStyle","didInit","activated","disabled","scrollable","swipeGesture","onClick","ev","current","target","previous","checked","tagName","value","checkButton","setCheckedClasses","oldValue","undefined","emitStyle","gestureChanged","emit","valueAfterGesture","buttons","getButtons","button","gesture","enable","createGesture","el","gestureName","gesturePriority","threshold","passive","onStart","onMove","onEnd","disabledChanged","detail","activate","setNextIndex","setActivated","checkedValidButton","event","stopImmediatePropagation","addRipple","Array","from","querySelectorAll","useRippleEffect","getBoolean","find","root","shadowRoot","ripple","querySelector","x","y","then","remove","forEach","classList","add","clicked","previousIndicator","getIndicator","currentIndicator","previousClientRect","getBoundingClientRect","currentClientRect","widthDelta","width","xPosition","left","transform","style","setProperty","index","findIndex","next","length","isEnd","isRTL","document","dir","nextIndex","rect","currentX","previousY","top","height","nextEl","elementFromPoint","decreaseIndex","increaseIndex","newIndex","mode","role","color","ios","md","segmentButtonIosCss","segmentButtonMdCss","ids","SegmentButton","segmentEl","layout","type","updateStyle","updateState","closest","hasTabIndex","hasAttribute","getAttribute","hasIcon","hasLabel","tabIndex","hasSegmentColor","part"],"mappings":"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","file":"31-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, c as writeTask, h, H as Host, i as getElement, j as forceUpdate } from './index-7a8b7a1c.js';\r\nimport { c as config, b as getIonMode } from './ionic-global-63a97a32.js';\r\nimport { p as pointerCoord, a as addEventListener, b as removeEventListener } from './helpers-1457892a.js';\r\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\r\n\r\nconst segmentIosCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.065)}:host(.in-toolbar){margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:auto}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background, var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb), 0.11)}\";\r\n\r\nconst segmentMdCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:transparent}:host(.segment-scrollable) ::slotted(ion-segment-button){min-width:auto}\";\r\n\r\nconst Segment = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionChange = createEvent(this, \"ionChange\", 7);\r\n    this.ionSelect = createEvent(this, \"ionSelect\", 7);\r\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\r\n    this.didInit = false;\r\n    this.activated = false;\r\n    /**\r\n     * If `true`, the user cannot interact with the segment.\r\n     */\r\n    this.disabled = false;\r\n    /**\r\n     * If `true`, the segment buttons will overflow and the user can swipe to see them.\r\n     * In addition, this will disable the gesture to drag the indicator between the buttons\r\n     * in order to swipe to see hidden buttons.\r\n     */\r\n    this.scrollable = false;\r\n    /**\r\n     * If `true`, users will be able to swipe between segment buttons to activate them.\r\n     */\r\n    this.swipeGesture = true;\r\n    this.onClick = (ev) => {\r\n      const current = ev.target;\r\n      const previous = this.checked;\r\n      // If the current element is a segment then that means\r\n      // the user tried to swipe to a segment button and\r\n      // click a segment button at the same time so we should\r\n      // not update the checked segment button\r\n      if (current.tagName === 'ION-SEGMENT') {\r\n        return;\r\n      }\r\n      this.value = current.value;\r\n      if (this.scrollable || !this.swipeGesture) {\r\n        if (previous) {\r\n          this.checkButton(previous, current);\r\n        }\r\n        else {\r\n          this.setCheckedClasses();\r\n        }\r\n      }\r\n      this.checked = current;\r\n    };\r\n  }\r\n  colorChanged(value, oldValue) {\r\n    /**\r\n     * If color is set after not having\r\n     * previously been set (or vice versa),\r\n     * we need to emit style so the segment-buttons\r\n     * can apply their color classes properly.\r\n     */\r\n    if ((oldValue === undefined && value !== undefined) ||\r\n      (oldValue !== undefined && value === undefined)) {\r\n      this.emitStyle();\r\n    }\r\n  }\r\n  swipeGestureChanged() {\r\n    this.gestureChanged();\r\n  }\r\n  valueChanged(value, oldValue) {\r\n    this.ionSelect.emit({ value });\r\n    if (oldValue !== '' || this.didInit) {\r\n      if (!this.activated) {\r\n        this.ionChange.emit({ value });\r\n      }\r\n      else {\r\n        this.valueAfterGesture = value;\r\n      }\r\n    }\r\n  }\r\n  disabledChanged() {\r\n    this.gestureChanged();\r\n    const buttons = this.getButtons();\r\n    for (const button of buttons) {\r\n      button.disabled = this.disabled;\r\n    }\r\n  }\r\n  gestureChanged() {\r\n    if (this.gesture) {\r\n      this.gesture.enable(!this.scrollable && !this.disabled && this.swipeGesture);\r\n    }\r\n  }\r\n  connectedCallback() {\r\n    this.emitStyle();\r\n  }\r\n  componentWillLoad() {\r\n    this.emitStyle();\r\n  }\r\n  async componentDidLoad() {\r\n    this.setCheckedClasses();\r\n    this.gesture = (await import('./index-34cb2743.js')).createGesture({\r\n      el: this.el,\r\n      gestureName: 'segment',\r\n      gesturePriority: 100,\r\n      threshold: 0,\r\n      passive: false,\r\n      onStart: ev => this.onStart(ev),\r\n      onMove: ev => this.onMove(ev),\r\n      onEnd: ev => this.onEnd(ev),\r\n    });\r\n    this.gestureChanged();\r\n    if (this.disabled) {\r\n      this.disabledChanged();\r\n    }\r\n    this.didInit = true;\r\n  }\r\n  onStart(detail) {\r\n    this.activate(detail);\r\n  }\r\n  onMove(detail) {\r\n    this.setNextIndex(detail);\r\n  }\r\n  onEnd(detail) {\r\n    this.setActivated(false);\r\n    const checkedValidButton = this.setNextIndex(detail, true);\r\n    detail.event.stopImmediatePropagation();\r\n    if (checkedValidButton) {\r\n      this.addRipple(detail);\r\n    }\r\n    const value = this.valueAfterGesture;\r\n    if (value !== undefined) {\r\n      this.ionChange.emit({ value });\r\n      this.valueAfterGesture = undefined;\r\n    }\r\n  }\r\n  getButtons() {\r\n    return Array.from(this.el.querySelectorAll('ion-segment-button'));\r\n  }\r\n  /**\r\n   * The gesture blocks the segment button ripple. This\r\n   * function adds the ripple based on the checked segment\r\n   * and where the cursor ended.\r\n   */\r\n  addRipple(detail) {\r\n    const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\r\n    if (!useRippleEffect) {\r\n      return;\r\n    }\r\n    const buttons = this.getButtons();\r\n    const checked = buttons.find(button => button.value === this.value);\r\n    const root = checked.shadowRoot || checked;\r\n    const ripple = root.querySelector('ion-ripple-effect');\r\n    if (!ripple) {\r\n      return;\r\n    }\r\n    const { x, y } = pointerCoord(detail.event);\r\n    ripple.addRipple(x, y).then(remove => remove());\r\n  }\r\n  /*\r\n   * Activate both the segment and the buttons\r\n   * due to a bug with ::slotted in Safari\r\n   */\r\n  setActivated(activated) {\r\n    const buttons = this.getButtons();\r\n    buttons.forEach(button => {\r\n      if (activated) {\r\n        button.classList.add('segment-button-activated');\r\n      }\r\n      else {\r\n        button.classList.remove('segment-button-activated');\r\n      }\r\n    });\r\n    this.activated = activated;\r\n  }\r\n  activate(detail) {\r\n    const clicked = detail.event.target;\r\n    const buttons = this.getButtons();\r\n    const checked = buttons.find(button => button.value === this.value);\r\n    // Make sure we are only checking for activation on a segment button\r\n    // since disabled buttons will get the click on the segment\r\n    if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\r\n      return;\r\n    }\r\n    // If there are no checked buttons, set the current button to checked\r\n    if (!checked) {\r\n      this.value = clicked.value;\r\n      this.setCheckedClasses();\r\n    }\r\n    // If the gesture began on the clicked button with the indicator\r\n    // then we should activate the indicator\r\n    if (this.value === clicked.value) {\r\n      this.setActivated(true);\r\n    }\r\n  }\r\n  getIndicator(button) {\r\n    const root = button.shadowRoot || button;\r\n    return root.querySelector('.segment-button-indicator');\r\n  }\r\n  checkButton(previous, current) {\r\n    const previousIndicator = this.getIndicator(previous);\r\n    const currentIndicator = this.getIndicator(current);\r\n    if (previousIndicator === null || currentIndicator === null) {\r\n      return;\r\n    }\r\n    const previousClientRect = previousIndicator.getBoundingClientRect();\r\n    const currentClientRect = currentIndicator.getBoundingClientRect();\r\n    const widthDelta = previousClientRect.width / currentClientRect.width;\r\n    const xPosition = previousClientRect.left - currentClientRect.left;\r\n    // Scale the indicator width to match the previous indicator width\r\n    // and translate it on top of the previous indicator\r\n    const transform = `translate3d(${xPosition}px, 0, 0) scaleX(${widthDelta})`;\r\n    writeTask(() => {\r\n      // Remove the transition before positioning on top of the previous indicator\r\n      currentIndicator.classList.remove('segment-button-indicator-animated');\r\n      currentIndicator.style.setProperty('transform', transform);\r\n      // Force a repaint to ensure the transform happens\r\n      currentIndicator.getBoundingClientRect();\r\n      // Add the transition to move the indicator into place\r\n      currentIndicator.classList.add('segment-button-indicator-animated');\r\n      // Remove the transform to slide the indicator back to the button clicked\r\n      currentIndicator.style.setProperty('transform', '');\r\n    });\r\n    this.value = current.value;\r\n    this.setCheckedClasses();\r\n  }\r\n  setCheckedClasses() {\r\n    const buttons = this.getButtons();\r\n    const index = buttons.findIndex(button => button.value === this.value);\r\n    const next = index + 1;\r\n    // Keep track of the currently checked button\r\n    this.checked = buttons.find(button => button.value === this.value);\r\n    for (const button of buttons) {\r\n      button.classList.remove('segment-button-after-checked');\r\n    }\r\n    if (next < buttons.length) {\r\n      buttons[next].classList.add('segment-button-after-checked');\r\n    }\r\n  }\r\n  setNextIndex(detail, isEnd = false) {\r\n    const isRTL = document.dir === 'rtl';\r\n    const activated = this.activated;\r\n    const buttons = this.getButtons();\r\n    const index = buttons.findIndex(button => button.value === this.value);\r\n    const previous = buttons[index];\r\n    let current;\r\n    let nextIndex;\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n    // Get the element that the touch event started on in case\r\n    // it was the checked button, then we will move the indicator\r\n    const rect = previous.getBoundingClientRect();\r\n    const left = rect.left;\r\n    const width = rect.width;\r\n    // Get the element that the gesture is on top of based on the currentX of the\r\n    // gesture event and the Y coordinate of the starting element, since the gesture\r\n    // can move up and down off of the segment\r\n    const currentX = detail.currentX;\r\n    const previousY = rect.top + (rect.height / 2);\r\n    const nextEl = document.elementFromPoint(currentX, previousY);\r\n    const decreaseIndex = isRTL ? currentX > (left + width) : currentX < left;\r\n    const increaseIndex = isRTL ? currentX < left : currentX > (left + width);\r\n    // If the indicator is currently activated then we have started the gesture\r\n    // on top of the checked button so we need to slide the indicator\r\n    // by checking the button next to it as we move\r\n    if (activated && !isEnd) {\r\n      // Decrease index, move left in LTR & right in RTL\r\n      if (decreaseIndex) {\r\n        const newIndex = index - 1;\r\n        if (newIndex >= 0) {\r\n          nextIndex = newIndex;\r\n        }\r\n        // Increase index, moves right in LTR & left in RTL\r\n      }\r\n      else if (increaseIndex) {\r\n        if (activated && !isEnd) {\r\n          const newIndex = index + 1;\r\n          if (newIndex < buttons.length) {\r\n            nextIndex = newIndex;\r\n          }\r\n        }\r\n      }\r\n      if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\r\n        current = buttons[nextIndex];\r\n      }\r\n    }\r\n    // If the indicator is not activated then we will just set the indicator\r\n    // to the element where the gesture ended\r\n    if (!activated && isEnd) {\r\n      current = nextEl;\r\n    }\r\n    /* tslint:disable-next-line */\r\n    if (current != null) {\r\n      /**\r\n       * If current element is ion-segment then that means\r\n       * user tried to select a disabled ion-segment-button,\r\n       * and we should not update the ripple.\r\n       */\r\n      if (current.tagName === 'ION-SEGMENT') {\r\n        return false;\r\n      }\r\n      if (previous !== current) {\r\n        this.checkButton(previous, current);\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  emitStyle() {\r\n    this.ionStyle.emit({\r\n      'segment': true\r\n    });\r\n  }\r\n  render() {\r\n    const mode = getIonMode(this);\r\n    return (h(Host, { role: \"tablist\", onClick: this.onClick, class: createColorClasses(this.color, {\r\n        [mode]: true,\r\n        'in-toolbar': hostContext('ion-toolbar', this.el),\r\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\r\n        'segment-activated': this.activated,\r\n        'segment-disabled': this.disabled,\r\n        'segment-scrollable': this.scrollable\r\n      }) }, h(\"slot\", null)));\r\n  }\r\n  get el() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"color\": [\"colorChanged\"],\r\n    \"swipeGesture\": [\"swipeGestureChanged\"],\r\n    \"value\": [\"valueChanged\"],\r\n    \"disabled\": [\"disabledChanged\"]\r\n  }; }\r\n};\r\nSegment.style = {\r\n  ios: segmentIosCss,\r\n  md: segmentMdCss\r\n};\r\n\r\nconst segmentButtonIosCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}:host(:focus){outline:none}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:none;--background-hover-opacity:0;--background-focused:none;--background-focused-opacity:0;--border-radius:7px;--border-width:1px;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);--border-style:solid;--indicator-box-shadow:0 0 5px rgba(0, 0, 0, 0.16);--indicator-color:var(--ion-color-step-350, var(--ion-background-color, #fff));--indicator-height:100%;--indicator-transition:transform 260ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--transition:100ms all linear;--padding-top:0;--padding-end:13px;--padding-bottom:0;--padding-start:13px;margin-top:2px;margin-bottom:2px;position:relative;-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-direction:row;flex-direction:row;min-width:70px;min-height:28px;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);font-size:13px;font-weight:450;line-height:37px}:host::before{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:5px;-webkit-transition:160ms opacity ease-in-out;transition:160ms opacity ease-in-out;-webkit-transition-delay:100ms;transition-delay:100ms;border-left:var(--border-width) var(--border-style) var(--border-color);content:\\\"\\\";opacity:1;will-change:opacity}:host(:first-of-type)::before{border-left-color:transparent}:host(.segment-button-disabled){opacity:0.3}::slotted(ion-icon){font-size:24px}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:2px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:2px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:2px;margin-inline-end:2px}}.segment-button-indicator{padding-left:2px;padding-right:2px;left:0;right:0;top:0;bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.segment-button-indicator{padding-left:unset;padding-right:unset;-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:2px;padding-inline-end:2px}}.segment-button-indicator-background{border-radius:var(--border-radius);background:var(--indicator-color)}.segment-button-indicator-background{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked)::before,:host(.segment-button-after-checked)::before{opacity:0}:host(.segment-button-checked){z-index:-1}:host(.segment-button-activated){--indicator-transform:scale(0.95)}:host(.ion-focused) .button-native{opacity:0.7}@media (any-hover: hover){:host(:hover) .button-native{opacity:0.5}:host(.segment-button-checked:hover) .button-native{opacity:1}}:host(.in-segment-color){background:none;color:var(--ion-text-color, #000)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-step-350, var(--ion-background-color, #fff))}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native,:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-text-color, #000)}}:host(.in-toolbar:not(.in-segment-color)){--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, var(--ion-toolbar-color), initial);--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-toolbar-color), initial);--indicator-color:var(--ion-toolbar-segment-indicator-color, var(--ion-color-step-350, var(--ion-background-color, #fff)))}:host(.in-toolbar-color) .segment-button-indicator-background{background:#fff}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-base)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color):hover) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color):hover) .button-native{color:var(--ion-color-base)}}\";\r\n\r\nconst segmentButtonMdCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}:host(:focus){outline:none}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:var(--color-checked);--background-focused:var(--color-checked);--background-activated-opacity:0;--background-focused-opacity:.12;--background-hover-opacity:.04;--color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--color-checked:var(--ion-color-primary, #3880ff);--indicator-box-shadow:none;--indicator-color:var(--color-checked);--indicator-height:2px;--indicator-transition:transform 250ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--padding-top:0;--padding-end:16px;--padding-bottom:0;--padding-start:16px;--transition:color 0.15s linear 0s, opacity 0.15s linear 0s;min-width:90px;max-width:360px;min-height:48px;border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);font-size:14px;font-weight:500;letter-spacing:0.06em;line-height:40px;text-transform:uppercase}:host(.segment-button-disabled){opacity:0.3}:host(.in-segment-color){background:none;color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color) ion-ripple-effect{color:var(--ion-color-base)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked) .button-native{color:var(--ion-color-base)}:host(.in-segment-color.ion-focused) .button-native::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native{color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color:hover) .button-native::after{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-color-base)}}:host(.in-toolbar:not(.in-segment-color)){--background:var(--ion-toolbar-segment-background, none);--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6));--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-color-primary, #3880ff));--indicator-color:var(--ion-toolbar-segment-color-checked, var(--color-checked))}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:rgba(var(--ion-color-contrast-rgb), 0.6)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color)) .button-native::after{background:var(--ion-color-contrast)}}::slotted(ion-icon){margin-top:12px;margin-bottom:12px;font-size:24px}::slotted(ion-label){margin-top:12px;margin-bottom:12px}:host(.segment-button-layout-icon-top) ::slotted(ion-label),:host(.segment-button-layout-icon-bottom) ::slotted(ion-icon){margin-top:0}:host(.segment-button-layout-icon-top) ::slotted(ion-icon),:host(.segment-button-layout-icon-bottom) ::slotted(ion-label){margin-bottom:0}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:8px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.segment-button-has-icon-only) ::slotted(ion-icon){margin-top:12px;margin-bottom:12px}:host(.segment-button-has-label-only) ::slotted(ion-label){margin-top:12px;margin-bottom:12px}.segment-button-indicator{left:0;right:0;bottom:0}.segment-button-indicator-background{background:var(--indicator-color)}:host(.in-toolbar:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-toolbar-segment-indicator-color, var(--indicator-color))}:host(.in-toolbar-color:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-color-contrast)}\";\r\n\r\nlet ids = 0;\r\nconst SegmentButton = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.segmentEl = null;\r\n    this.checked = false;\r\n    /**\r\n     * If `true`, the user cannot interact with the segment button.\r\n     */\r\n    this.disabled = false;\r\n    /**\r\n     * Set the layout of the text and icon in the segment.\r\n     */\r\n    this.layout = 'icon-top';\r\n    /**\r\n     * The type of the button.\r\n     */\r\n    this.type = 'button';\r\n    /**\r\n     * The value of the segment button.\r\n     */\r\n    this.value = 'ion-sb-' + (ids++);\r\n    this.updateStyle = () => {\r\n      forceUpdate(this);\r\n    };\r\n    this.updateState = () => {\r\n      if (this.segmentEl) {\r\n        this.checked = this.segmentEl.value === this.value;\r\n      }\r\n    };\r\n  }\r\n  connectedCallback() {\r\n    const segmentEl = this.segmentEl = this.el.closest('ion-segment');\r\n    if (segmentEl) {\r\n      this.updateState();\r\n      addEventListener(segmentEl, 'ionSelect', this.updateState);\r\n      addEventListener(segmentEl, 'ionStyle', this.updateStyle);\r\n    }\r\n  }\r\n  disconnectedCallback() {\r\n    const segmentEl = this.segmentEl;\r\n    if (segmentEl) {\r\n      removeEventListener(segmentEl, 'ionSelect', this.updateState);\r\n      removeEventListener(segmentEl, 'ionStyle', this.updateStyle);\r\n      this.segmentEl = null;\r\n    }\r\n  }\r\n  get hasLabel() {\r\n    return !!this.el.querySelector('ion-label');\r\n  }\r\n  get hasIcon() {\r\n    return !!this.el.querySelector('ion-icon');\r\n  }\r\n  get tabIndex() {\r\n    if (this.disabled) {\r\n      return -1;\r\n    }\r\n    const hasTabIndex = this.el.hasAttribute('tabindex');\r\n    if (hasTabIndex) {\r\n      return this.el.getAttribute('tabindex');\r\n    }\r\n    return 0;\r\n  }\r\n  render() {\r\n    const { checked, type, disabled, hasIcon, hasLabel, layout, segmentEl, tabIndex } = this;\r\n    const mode = getIonMode(this);\r\n    const hasSegmentColor = () => segmentEl !== null && segmentEl.color !== undefined;\r\n    return (h(Host, { role: \"tab\", \"aria-selected\": checked ? 'true' : 'false', \"aria-disabled\": disabled ? 'true' : null, tabIndex: tabIndex, class: {\r\n        [mode]: true,\r\n        'in-toolbar': hostContext('ion-toolbar', this.el),\r\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\r\n        'in-segment': hostContext('ion-segment', this.el),\r\n        'in-segment-color': hasSegmentColor(),\r\n        'segment-button-has-label': hasLabel,\r\n        'segment-button-has-icon': hasIcon,\r\n        'segment-button-has-label-only': hasLabel && !hasIcon,\r\n        'segment-button-has-icon-only': hasIcon && !hasLabel,\r\n        'segment-button-disabled': disabled,\r\n        'segment-button-checked': checked,\r\n        [`segment-button-layout-${layout}`]: true,\r\n        'ion-activatable': true,\r\n        'ion-activatable-instant': true,\r\n        'ion-focusable': true,\r\n      } }, h(\"button\", { type: type, tabIndex: -1, class: \"button-native\", part: \"native\", disabled: disabled }, h(\"span\", { class: \"button-inner\" }, h(\"slot\", null)), mode === 'md' && h(\"ion-ripple-effect\", null)), h(\"div\", { part: \"indicator\", class: {\r\n        'segment-button-indicator': true,\r\n        'segment-button-indicator-animated': true\r\n      } }, h(\"div\", { part: \"indicator-background\", class: \"segment-button-indicator-background\" }))));\r\n  }\r\n  get el() { return getElement(this); }\r\n};\r\nSegmentButton.style = {\r\n  ios: segmentButtonIosCss,\r\n  md: segmentButtonMdCss\r\n};\r\n\r\nexport { Segment as ion_segment, SegmentButton as ion_segment_button };\r\n"]}