{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-route_4.entry.js"],"names":["Route","hostRef","ionRouteDataChanged","url","newValue","emit","oldValue","keys1","Object","keys","keys2","length","onUpdate","key","RouteRedirect","ionRouteRedirectChanged","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","generateUrl","useHash","queryString","undefined","writePath","history","root","direction","state","parsePath","pushState","replaceState","chainToPath","chain","route","segment","param","params","slice","push","removePrefix","prefix","i","readPath","loc","pathname","hash","qsStart","indexOf","substr","split","map","trim","printRoutes","routes","console","group","forEach","r","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","index","changed","animation","outlet","searchNavNode","Promise","resolve","setRouteId","result","element","markVisible","error","readNavState","node","getRouteId","waitUntilNavNode","document","body","window","addEventListener","once","QUERY","matches","querySelector","matchesRedirect","expected","findRouteRedirect","find","matchesIDs","len","Math","min","score","routeId","routeChain","toLowerCase","routeIdParams","pathWithParams","j","matchesPath","inputPath","RouterSegments","matchesDefault","allparams","data","next","mergeParams","beforeEnter","beforeLeave","a","b","assign","routerIDsToChain","chains","match","maxMatches","routerPathToChain","matchedChain","computePriority","level","pow","shift","readProp","el","prop","hasAttribute","getAttribute","readRedirects","Array","children","tagName","readRoutes","flattenRouterTree","readRouteNodes","component","componentProps","nodes","flattenNode","child","Router","ionRouteWillChange","ionRouteDidChange","previousPath","busy","lastState","runGuards","getPath","canProceed","setPath","writeNavStateRoot","onRoutesChanged","onRedirectChanged","bind","historyDirection","ev","detail","register","processNextHandler","back","startsWith","URL","location","href","parsedPath","waitPromise","warn","safeWriteNavState","_a","win","title","redirectFrom","lock","unlock","p","fromChain","beforeLeaveHook","canLeave","toChain","beforeEnterHook","routeEvent","routeChangeEvent","redirectFromPath","redirectedFrom","routerLinkCss","RouterLink","routerDirection","onClick","routerAnimation","mode","attrs","rel","target","color","style"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,UAAMA,KAAK;AACT,uBAAYC,OAAZ,EAAqB;AAAA;;AACnB,uEAAiB,IAAjB,EAAuBA,OAAvB;AACA,eAAKC,mBAAL,GAA2B,6DAAY,IAAZ,EAAkB,qBAAlB,EAAyC,CAAzC,CAA3B;AACA;;;;;;;AAMA,eAAKC,GAAL,GAAW,EAAX;AACD;;AAXQ;AAAA;AAAA,iBAYT,kBAASC,QAAT,EAAmB;AACjB,iBAAKF,mBAAL,CAAyBG,IAAzB,CAA8BD,QAA9B;AACD;AAdQ;AAAA;AAAA,iBAeT,0BAAiBA,QAAjB,EAA2BE,QAA3B,EAAqC;AACnC,gBAAIF,QAAQ,KAAKE,QAAjB,EAA2B;AACzB;AACD;;AACD,gBAAMC,KAAK,GAAGH,QAAQ,GAAGI,MAAM,CAACC,IAAP,CAAYL,QAAZ,CAAH,GAA2B,EAAjD;AACA,gBAAMM,KAAK,GAAGJ,QAAQ,GAAGE,MAAM,CAACC,IAAP,CAAYH,QAAZ,CAAH,GAA2B,EAAjD;;AACA,gBAAIC,KAAK,CAACI,MAAN,KAAiBD,KAAK,CAACC,MAA3B,EAAmC;AACjC,mBAAKC,QAAL,CAAcR,QAAd;AACA;AACD;;AATkC,uDAUjBG,KAViB;AAAA;;AAAA;AAUnC,kEAAyB;AAAA,oBAAdM,GAAc;;AACvB,oBAAIT,QAAQ,CAACS,GAAD,CAAR,KAAkBP,QAAQ,CAACO,GAAD,CAA9B,EAAqC;AACnC,uBAAKD,QAAL,CAAcR,QAAd;AACA;AACD;AACF;AAfkC;AAAA;AAAA;AAAA;AAAA;AAgBpC;AA/BQ;AAAA;AAAA,iBAgCT,6BAAoB;AAClB,iBAAKF,mBAAL,CAAyBG,IAAzB;AACD;AAlCQ;AAAA;AAAA,eAmCT,eAAsB;AAAE,mBAAO;AAC7B,qBAAO,CAAC,UAAD,CADsB;AAE7B,2BAAa,CAAC,UAAD,CAFgB;AAG7B,gCAAkB,CAAC,kBAAD;AAHW,aAAP;AAIpB;AAvCK;;AAAA;AAAA,SAAX;;AA0CA,UAAMS,aAAa;AACjB,+BAAYb,OAAZ,EAAqB;AAAA;;AACnB,uEAAiB,IAAjB,EAAuBA,OAAvB;AACA,eAAKc,uBAAL,GAA+B,6DAAY,IAAZ,EAAkB,yBAAlB,EAA6C,CAA7C,CAA/B;AACD;;AAJgB;AAAA;AAAA,iBAKjB,yBAAgB;AACd,iBAAKA,uBAAL,CAA6BV,IAA7B;AACD;AAPgB;AAAA;AAAA,iBAQjB,6BAAoB;AAClB,iBAAKU,uBAAL,CAA6BV,IAA7B;AACD;AAVgB;AAAA;AAAA,eAWjB,eAAsB;AAAE,mBAAO;AAC7B,sBAAQ,CAAC,eAAD,CADqB;AAE7B,oBAAM,CAAC,eAAD;AAFuB,aAAP;AAGpB;AAda;;AAAA;AAAA,SAAnB;;AAiBA,UAAMW,kBAAkB,GAAG,MAA3B;AACA,UAAMC,qBAAqB,GAAG,SAA9B;AACA,UAAMC,kBAAkB,GAAG,MAA3B,C,CAEA;;AACA,UAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAc;AACjC,YAAMC,IAAI,GAAGD,QAAQ,CAClBE,MADU,CACH,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACZ,MAAF,GAAW,CAAf;AAAA,SADE,EAEVa,IAFU,CAEL,GAFK,CAAb;AAGA,eAAO,MAAMH,IAAb;AACD,OALD;;AAMA,UAAMI,WAAW,GAAG,SAAdA,WAAc,CAACL,QAAD,EAAWM,OAAX,EAAoBC,WAApB,EAAoC;AACtD,YAAIxB,GAAG,GAAGgB,YAAY,CAACC,QAAD,CAAtB;;AACA,YAAIM,OAAJ,EAAa;AACXvB,aAAG,GAAG,MAAMA,GAAZ;AACD;;AACD,YAAIwB,WAAW,KAAKC,SAApB,EAA+B;AAC7BzB,aAAG,IAAI,MAAMwB,WAAb;AACD;;AACD,eAAOxB,GAAP;AACD,OATD;;AAUA,UAAM0B,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAUC,IAAV,EAAgBL,OAAhB,EAAyBL,IAAzB,EAA+BW,SAA/B,EAA0CC,KAA1C,EAAiDN,WAAjD,EAAiE;AACjF,YAAMxB,GAAG,GAAGsB,WAAW,8BAAKS,SAAS,CAACH,IAAD,CAAT,CAAgBX,QAArB,sBAAkCC,IAAlC,IAAyCK,OAAzC,EAAkDC,WAAlD,CAAvB;;AACA,YAAIK,SAAS,KAAKf,qBAAlB,EAAyC;AACvCa,iBAAO,CAACK,SAAR,CAAkBF,KAAlB,EAAyB,EAAzB,EAA6B9B,GAA7B;AACD,SAFD,MAGK;AACH2B,iBAAO,CAACM,YAAR,CAAqBH,KAArB,EAA4B,EAA5B,EAAgC9B,GAAhC;AACD;AACF,OARD;;AASA,UAAMkC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7B,YAAMjB,IAAI,GAAG,EAAb;;AAD6B,oDAETiB,KAFS;AAAA;;AAAA;AAE7B,iEAA2B;AAAA,gBAAhBC,KAAgB;;AAAA,wDACHA,KAAK,CAAClB,IADH;AAAA;;AAAA;AACzB,qEAAkC;AAAA,oBAAvBmB,OAAuB;;AAChC,oBAAIA,OAAO,CAAC,CAAD,CAAP,KAAe,GAAnB,EAAwB;AACtB,sBAAMC,KAAK,GAAGF,KAAK,CAACG,MAAN,IAAgBH,KAAK,CAACG,MAAN,CAAaF,OAAO,CAACG,KAAR,CAAc,CAAd,CAAb,CAA9B;;AACA,sBAAI,CAACF,KAAL,EAAY;AACV,2BAAO,IAAP;AACD;;AACDpB,sBAAI,CAACuB,IAAL,CAAUH,KAAV;AACD,iBAND,MAOK,IAAID,OAAO,KAAK,EAAhB,EAAoB;AACvBnB,sBAAI,CAACuB,IAAL,CAAUJ,OAAV;AACD;AACF;AAZwB;AAAA;AAAA;AAAA;AAAA;AAa1B;AAf4B;AAAA;AAAA;AAAA;AAAA;;AAgB7B,eAAOnB,IAAP;AACD,OAjBD,C,CAkBA;AACA;AACA;AACA;AACA;;;AACA,UAAMwB,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAASzB,IAAT,EAAkB;AACrC,YAAIyB,MAAM,CAACnC,MAAP,GAAgBU,IAAI,CAACV,MAAzB,EAAiC;AAC/B,iBAAO,IAAP;AACD;;AACD,YAAImC,MAAM,CAACnC,MAAP,IAAiB,CAAjB,IAAsBmC,MAAM,CAAC,CAAD,CAAN,KAAc,EAAxC,EAA4C;AAC1C,iBAAOzB,IAAP;AACD;;AACD,aAAK,IAAI0B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,CAACnC,MAA3B,EAAmCoC,CAAC,EAApC,EAAwC;AACtC,cAAID,MAAM,CAACC,CAAD,CAAN,KAAc1B,IAAI,CAAC0B,CAAD,CAAtB,EAA2B;AACzB,mBAAO,IAAP;AACD;AACF;;AACD,YAAI1B,IAAI,CAACV,MAAL,KAAgBmC,MAAM,CAACnC,MAA3B,EAAmC;AACjC,iBAAO,CAAC,EAAD,CAAP;AACD;;AACD,eAAOU,IAAI,CAACsB,KAAL,CAAWG,MAAM,CAACnC,MAAlB,CAAP;AACD,OAhBD;;AAiBA,UAAMqC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAMlB,IAAN,EAAYL,OAAZ,EAAwB;AACvC,YAAMoB,MAAM,GAAGZ,SAAS,CAACH,IAAD,CAAT,CAAgBX,QAA/B;AACA,YAAM8B,QAAQ,GAAGxB,OAAO,GAAGuB,GAAG,CAACE,IAAJ,CAASR,KAAT,CAAe,CAAf,CAAH,GAAuBM,GAAG,CAACC,QAAnD;AACA,YAAM7B,IAAI,GAAGa,SAAS,CAACgB,QAAD,CAAT,CAAoB9B,QAAjC;AACA,eAAOyB,YAAY,CAACC,MAAD,EAASzB,IAAT,CAAnB;AACD,OALD,C,CAMA;AACA;AACA;;;AACA,UAAMa,SAAS,GAAG,SAAZA,SAAY,CAACb,IAAD,EAAU;AAC1B,YAAID,QAAQ,GAAG,CAAC,EAAD,CAAf;AACA,YAAIO,WAAJ;;AACA,YAAIN,IAAI,IAAI,IAAZ,EAAkB;AAChB,cAAM+B,OAAO,GAAG/B,IAAI,CAACgC,OAAL,CAAa,GAAb,CAAhB;;AACA,cAAID,OAAO,GAAG,CAAC,CAAf,EAAkB;AAChBzB,uBAAW,GAAGN,IAAI,CAACiC,MAAL,CAAYF,OAAO,GAAG,CAAtB,CAAd;AACA/B,gBAAI,GAAGA,IAAI,CAACiC,MAAL,CAAY,CAAZ,EAAeF,OAAf,CAAP;AACD;;AACDhC,kBAAQ,GAAGC,IAAI,CAACkC,KAAL,CAAW,GAAX,EACRC,GADQ,CACJ,UAAAjC,CAAC;AAAA,mBAAIA,CAAC,CAACkC,IAAF,EAAJ;AAAA,WADG,EAERnC,MAFQ,CAED,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACZ,MAAF,GAAW,CAAf;AAAA,WAFA,CAAX;;AAGA,cAAIS,QAAQ,CAACT,MAAT,KAAoB,CAAxB,EAA2B;AACzBS,oBAAQ,GAAG,CAAC,EAAD,CAAX;AACD;AACF;;AACD,eAAO;AAAEA,kBAAQ,EAARA,QAAF;AAAYO,qBAAW,EAAXA;AAAZ,SAAP;AACD,OAjBD;;AAmBA,UAAM+B,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAAY;AAC9BC,eAAO,CAACC,KAAR,6BAAmCF,MAAM,CAAChD,MAA1C;;AAD8B,oDAEVgD,MAFU;AAAA;;AAAA;AAAA,uCAEF;AAAA,gBAAjBrB,KAAiB;AAC1B,gBAAMjB,IAAI,GAAG,EAAb;AACAiB,iBAAK,CAACwB,OAAN,CAAc,UAAAC,CAAC;AAAA,qBAAI1C,IAAI,CAACuB,IAAL,OAAAvB,IAAI,qBAAS0C,CAAC,CAAC1C,IAAX,EAAR;AAAA,aAAf;AACA,gBAAM2C,GAAG,GAAG1B,KAAK,CAACkB,GAAN,CAAU,UAAAO,CAAC;AAAA,qBAAIA,CAAC,CAACE,EAAN;AAAA,aAAX,CAAZ;AACAL,mBAAO,CAACM,KAAR,cAAoB/C,YAAY,CAACE,IAAD,CAAhC,GAA0C,uCAA1C,EAAmF,MAAnF,aAA+F2C,GAAG,CAACxC,IAAJ,CAAS,IAAT,CAA/F;AACD,WAP6B;;AAE9B;AAAA;AAAA;AAF8B;AAAA;AAAA;AAAA;AAAA;;AAQ9BoC,eAAO,CAACO,QAAR;AACD,OATD;;AAUA,UAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,SAAD,EAAe;AACpCT,eAAO,CAACC,KAAR,gCAAsCQ,SAAS,CAAC1D,MAAhD;;AADoC,oDAEb0D,SAFa;AAAA;;AAAA;AAEpC,iEAAkC;AAAA,gBAAvBC,QAAuB;;AAChC,gBAAIA,QAAQ,CAACC,EAAb,EAAiB;AACfX,qBAAO,CAACM,KAAR,CAAc,QAAd,eAA8B/C,YAAY,CAACmD,QAAQ,CAACE,IAAV,CAA1C,GAA6D,mBAA7D,EAAkF,OAAlF,eAAiGrD,YAAY,CAACmD,QAAQ,CAACC,EAAT,CAAYnD,QAAb,CAA7G,GAAuI,mBAAvI;AACD;AACF;AANmC;AAAA;AAAA;AAAA;AAAA;;AAOpCwC,eAAO,CAACO,QAAR;AACD,OARD;;AAUA,UAAMM,cAAa;AAAA,8EAAG,iBAAO1C,IAAP,EAAaO,KAAb,EAAoBN,SAApB,EAA+B0C,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsCC,uBAAtC,2DAAgD,KAAhD;AAAuDC,yBAAvD;AAAA;AAElB;AACMC,sBAHY,GAGHC,aAAa,CAAC/C,IAAD,CAHV,EAIlB;;AAJkB,sBAKd2C,KAAK,IAAIpC,KAAK,CAAC3B,MAAf,IAAyB,CAACkE,MALZ;AAAA;AAAA;AAAA;;AAAA,iDAMTF,OANS;;AAAA;AAAA;AAAA,uBAQZ,IAAII,OAAJ,CAAY,UAAAC,OAAO;AAAA,yBAAI,+DAAiBH,MAAjB,EAAyBG,OAAzB,CAAJ;AAAA,iBAAnB,CARY;;AAAA;AASZzC,qBATY,GASJD,KAAK,CAACoC,KAAD,CATD;AAAA;AAAA,uBAUGG,MAAM,CAACI,UAAP,CAAkB1C,KAAK,CAAC0B,EAAxB,EAA4B1B,KAAK,CAACG,MAAlC,EAA0CV,SAA1C,EAAqD4C,SAArD,CAVH;;AAAA;AAUZM,sBAVY;;AAWlB;AACA;AACA,oBAAIA,MAAM,CAACP,OAAX,EAAoB;AAClB3C,2BAAS,GAAGhB,kBAAZ;AACA2D,yBAAO,GAAG,IAAV;AACD,iBAhBiB,CAiBlB;;;AAjBkB;AAAA,uBAkBFF,cAAa,CAACS,MAAM,CAACC,OAAR,EAAiB7C,KAAjB,EAAwBN,SAAxB,EAAmC0C,KAAK,GAAG,CAA3C,EAA8CC,OAA9C,EAAuDC,SAAvD,CAlBX;;AAAA;AAkBlBD,uBAlBkB;;AAAA,qBAqBdO,MAAM,CAACE,WArBO;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAsBVF,MAAM,CAACE,WAAP,EAtBU;;AAAA;AAAA,iDAwBXT,OAxBW;;AAAA;AAAA;AAAA;AA2BlBf,uBAAO,CAACyB,KAAR;AA3BkB,iDA4BX,KA5BW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH;;AAAA,wBAAbZ,aAAa;AAAA;AAAA;AAAA,SAAnB;;AA+BA,UAAMa,YAAY;AAAA,+EAAG,kBAAOvD,IAAP;AAAA;AAAA;AAAA;AAAA;AACbiC,mBADa,GACP,EADO;AAGfuB,oBAHe,GAGRxD,IAHQ,EAInB;;AAJmB;AAAA,qBAKZ,IALY;AAAA;AAAA;AAAA;;AAMjB8C,sBAAM,GAAGC,aAAa,CAACS,IAAD,CAAtB;;AANiB,qBAObV,MAPa;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAQEA,MAAM,CAACW,UAAP,EARF;;AAAA;AAQTvB,kBARS;;AAAA,qBASXA,EATW;AAAA;AAAA;AAAA;;AAUbsB,oBAAI,GAAGtB,EAAE,CAACkB,OAAV;AACAlB,kBAAE,CAACkB,OAAH,GAAavD,SAAb;AACAoC,mBAAG,CAACpB,IAAJ,CAASqB,EAAT;AAZa;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,kDAsBZ;AAAED,qBAAG,EAAHA,GAAF;AAAOa,wBAAM,EAANA;AAAP,iBAtBY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAH;;AAAA,wBAAZS,YAAY;AAAA;AAAA;AAAA,SAAlB;;AAwBA,UAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,YAAIX,aAAa,CAACY,QAAQ,CAACC,IAAV,CAAjB,EAAkC;AAChC,iBAAOZ,OAAO,CAACC,OAAR,EAAP;AACD;;AACD,eAAO,IAAID,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5BY,gBAAM,CAACC,gBAAP,CAAwB,gBAAxB,EAA0Cb,OAA1C,EAAmD;AAAEc,gBAAI,EAAE;AAAR,WAAnD;AACD,SAFM,CAAP;AAGD,OAPD;;AAQA,UAAMC,KAAK,GAAG,4FAAd;;AACA,UAAMjB,aAAa,GAAG,SAAhBA,aAAgB,CAAC/C,IAAD,EAAU;AAC9B,YAAI,CAACA,IAAL,EAAW;AACT,iBAAOH,SAAP;AACD;;AACD,YAAIG,IAAI,CAACiE,OAAL,CAAaD,KAAb,CAAJ,EAAyB;AACvB,iBAAOhE,IAAP;AACD;;AACD,YAAM8C,MAAM,GAAG9C,IAAI,CAACkE,aAAL,CAAmBF,KAAnB,CAAf;AACA,eAAOlB,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuCA,MAAvC,GAAgDjD,SAAvD;AACD,OATD,C,CAWA;AACA;AACA;AACA;AACA;;;AACA,UAAMsE,eAAe,GAAG,SAAlBA,eAAkB,CAAC7E,IAAD,EAAOiD,QAAP,EAAoB;AAC1C,YAAQE,IAAR,GAAqBF,QAArB,CAAQE,IAAR;AAAA,YAAcD,EAAd,GAAqBD,QAArB,CAAcC,EAAd;;AACA,YAAIA,EAAE,KAAK3C,SAAX,EAAsB;AACpB,iBAAO,KAAP;AACD;;AACD,YAAI4C,IAAI,CAAC7D,MAAL,GAAcU,IAAI,CAACV,MAAvB,EAA+B;AAC7B,iBAAO,KAAP;AACD;;AACD,aAAK,IAAIoC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyB,IAAI,CAAC7D,MAAzB,EAAiCoC,CAAC,EAAlC,EAAsC;AACpC,cAAMoD,QAAQ,GAAG3B,IAAI,CAACzB,CAAD,CAArB;;AACA,cAAIoD,QAAQ,KAAK,GAAjB,EAAsB;AACpB,mBAAO,IAAP;AACD;;AACD,cAAIA,QAAQ,KAAK9E,IAAI,CAAC0B,CAAD,CAArB,EAA0B;AACxB,mBAAO,KAAP;AACD;AACF;;AACD,eAAOyB,IAAI,CAAC7D,MAAL,KAAgBU,IAAI,CAACV,MAA5B;AACD,OAlBD,C,CAmBA;;;AACA,UAAMyF,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC/E,IAAD,EAAOgD,SAAP,EAAqB;AAC7C,eAAOA,SAAS,CAACgC,IAAV,CAAe,UAAA/B,QAAQ;AAAA,iBAAI4B,eAAe,CAAC7E,IAAD,EAAOiD,QAAP,CAAnB;AAAA,SAAvB,CAAP;AACD,OAFD;;AAGA,UAAMgC,UAAU,GAAG,SAAbA,UAAa,CAACtC,GAAD,EAAM1B,KAAN,EAAgB;AACjC,YAAMiE,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASzC,GAAG,CAACrD,MAAb,EAAqB2B,KAAK,CAAC3B,MAA3B,CAAZ;AACA,YAAI+F,KAAK,GAAG,CAAZ;;AACA,aAAK,IAAI3D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwD,GAApB,EAAyBxD,CAAC,EAA1B,EAA8B;AAC5B,cAAM4D,OAAO,GAAG3C,GAAG,CAACjB,CAAD,CAAnB;AACA,cAAM6D,UAAU,GAAGtE,KAAK,CAACS,CAAD,CAAxB,CAF4B,CAG5B;;AACA,cAAI4D,OAAO,CAAC1C,EAAR,CAAW4C,WAAX,OAA6BD,UAAU,CAAC3C,EAA5C,EAAgD;AAC9C;AACD;;AACD,cAAI0C,OAAO,CAACjE,MAAZ,EAAoB;AAClB,gBAAMoE,aAAa,GAAGtG,MAAM,CAACC,IAAP,CAAYkG,OAAO,CAACjE,MAApB,CAAtB;AACA;;;;AAGA,gBAAIoE,aAAa,CAACnG,MAAd,KAAyBiG,UAAU,CAACvF,IAAX,CAAgBV,MAA7C,EAAqD;AACnD;;;;;;;;;;;;;;;;;;;AAmBA,kBAAMoG,cAAc,GAAGD,aAAa,CAACtD,GAAd,CAAkB,UAAA3C,GAAG;AAAA,kCAAQA,GAAR;AAAA,eAArB,CAAvB;;AACA,mBAAK,IAAImG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,cAAc,CAACpG,MAAnC,EAA2CqG,CAAC,EAA5C,EAAgD;AAC9C;AACA,oBAAID,cAAc,CAACC,CAAD,CAAd,CAAkBH,WAAlB,OAAoCD,UAAU,CAACvF,IAAX,CAAgB2F,CAAhB,CAAxC,EAA4D;AAC1D;AACD,iBAJ6C,CAK9C;;;AACAN,qBAAK;AACN;AACF;AACF,WA1C2B,CA2C5B;;;AACAA,eAAK;AACN;;AACD,eAAOA,KAAP;AACD,OAlDD;;AAmDA,UAAMO,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAY5E,KAAZ,EAAsB;AACxC,YAAMlB,QAAQ,GAAG,IAAI+F,cAAJ,CAAmBD,SAAnB,CAAjB;AACA,YAAIE,cAAc,GAAG,KAArB;AACA,YAAIC,SAAJ;;AACA,aAAK,IAAItE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,KAAK,CAAC3B,MAA1B,EAAkCoC,CAAC,EAAnC,EAAuC;AACrC,cAAM1B,IAAI,GAAGiB,KAAK,CAACS,CAAD,CAAL,CAAS1B,IAAtB;;AACA,cAAIA,IAAI,CAAC,CAAD,CAAJ,KAAY,EAAhB,EAAoB;AAClB+F,0BAAc,GAAG,IAAjB;AACD,WAFD,MAGK;AAAA,wDACmB/F,IADnB;AAAA;;AAAA;AACH,qEAA4B;AAAA,oBAAjBmB,OAAiB;AAC1B,oBAAM8E,IAAI,GAAGlG,QAAQ,CAACmG,IAAT,EAAb,CAD0B,CAE1B;;AACA,oBAAI/E,OAAO,CAAC,CAAD,CAAP,KAAe,GAAnB,EAAwB;AACtB,sBAAI8E,IAAI,KAAK,EAAb,EAAiB;AACf,2BAAO,IAAP;AACD;;AACDD,2BAAS,GAAGA,SAAS,IAAI,EAAzB;AACA,sBAAM3E,MAAM,GAAG2E,SAAS,CAACtE,CAAD,CAAT,KAAiBsE,SAAS,CAACtE,CAAD,CAAT,GAAe,EAAhC,CAAf;AACAL,wBAAM,CAACF,OAAO,CAACG,KAAR,CAAc,CAAd,CAAD,CAAN,GAA2B2E,IAA3B;AACD,iBAPD,MAQK,IAAIA,IAAI,KAAK9E,OAAb,EAAsB;AACzB,yBAAO,IAAP;AACD;AACF;AAfE;AAAA;AAAA;AAAA;AAAA;;AAgBH4E,0BAAc,GAAG,KAAjB;AACD;AACF;;AACD,YAAMpB,OAAO,GAAIoB,cAAD,GACZA,cAAc,MAAMhG,QAAQ,CAACmG,IAAT,OAAoB,EAA1B,CADF,GAEZ,IAFJ;;AAGA,YAAI,CAACvB,OAAL,EAAc;AACZ,iBAAO,IAAP;AACD;;AACD,YAAIqB,SAAJ,EAAe;AACb,iBAAO/E,KAAK,CAACkB,GAAN,CAAU,UAACjB,KAAD,EAAQQ,CAAR;AAAA,mBAAe;AAC9BkB,gBAAE,EAAE1B,KAAK,CAAC0B,EADoB;AAE9B5C,kBAAI,EAAEkB,KAAK,CAAClB,IAFkB;AAG9BqB,oBAAM,EAAE8E,WAAW,CAACjF,KAAK,CAACG,MAAP,EAAe2E,SAAS,CAACtE,CAAD,CAAxB,CAHW;AAI9B0E,yBAAW,EAAElF,KAAK,CAACkF,WAJW;AAK9BC,yBAAW,EAAEnF,KAAK,CAACmF;AALW,aAAf;AAAA,WAAV,CAAP;AAOD;;AACD,eAAOpF,KAAP;AACD,OA5CD,C,CA6CA;AACA;;;AACA,UAAMkF,WAAW,GAAG,SAAdA,WAAc,CAACG,CAAD,EAAIC,CAAJ,EAAU;AAC5B,eAAOD,CAAC,IAAIC,CAAL,GAASpH,MAAM,CAACqH,MAAP,CAAcrH,MAAM,CAACqH,MAAP,CAAc,EAAd,EAAkBF,CAAlB,CAAd,EAAoCC,CAApC,CAAT,GAAkDhG,SAAzD;AACD,OAFD;;AAGA,UAAMkG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAC9D,GAAD,EAAM+D,MAAN,EAAiB;AACxC,YAAIC,KAAK,GAAG,IAAZ;AACA,YAAIC,UAAU,GAAG,CAAjB;;AAFwC,oDAGpBF,MAHoB;AAAA;;AAAA;AAGxC,iEAA4B;AAAA,gBAAjBzF,KAAiB;AAC1B,gBAAMoE,KAAK,GAAGJ,UAAU,CAACtC,GAAD,EAAM1B,KAAN,CAAxB;;AACA,gBAAIoE,KAAK,GAAGuB,UAAZ,EAAwB;AACtBD,mBAAK,GAAG1F,KAAR;AACA2F,wBAAU,GAAGvB,KAAb;AACD;AACF;AATuC;AAAA;AAAA;AAAA;AAAA;;AAUxC,YAAIsB,KAAJ,EAAW;AACT,iBAAOA,KAAK,CAACxE,GAAN,CAAU,UAACjB,KAAD,EAAQQ,CAAR;AAAA,mBAAe;AAC9BkB,gBAAE,EAAE1B,KAAK,CAAC0B,EADoB;AAE9B5C,kBAAI,EAAEkB,KAAK,CAAClB,IAFkB;AAG9BqB,oBAAM,EAAE8E,WAAW,CAACjF,KAAK,CAACG,MAAP,EAAesB,GAAG,CAACjB,CAAD,CAAH,IAAUiB,GAAG,CAACjB,CAAD,CAAH,CAAOL,MAAhC;AAHW,aAAf;AAAA,WAAV,CAAP;AAKD;;AACD,eAAO,IAAP;AACD,OAlBD;;AAmBA,UAAMwF,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC7G,IAAD,EAAO0G,MAAP,EAAkB;AAC1C,YAAIC,KAAK,GAAG,IAAZ;AACA,YAAIhC,OAAO,GAAG,CAAd;;AAF0C,oDAGtB+B,MAHsB;AAAA;;AAAA;AAG1C,iEAA4B;AAAA,gBAAjBzF,KAAiB;AAC1B,gBAAM6F,YAAY,GAAGlB,WAAW,CAAC5F,IAAD,EAAOiB,KAAP,CAAhC;;AACA,gBAAI6F,YAAY,KAAK,IAArB,EAA2B;AACzB,kBAAMzB,KAAK,GAAG0B,eAAe,CAACD,YAAD,CAA7B;;AACA,kBAAIzB,KAAK,GAAGV,OAAZ,EAAqB;AACnBA,uBAAO,GAAGU,KAAV;AACAsB,qBAAK,GAAGG,YAAR;AACD;AACF;AACF;AAZyC;AAAA;AAAA;AAAA;AAAA;;AAa1C,eAAOH,KAAP;AACD,OAdD;;AAeA,UAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAAC9F,KAAD,EAAW;AACjC,YAAIoE,KAAK,GAAG,CAAZ;AACA,YAAI2B,KAAK,GAAG,CAAZ;;AAFiC,oDAGb/F,KAHa;AAAA;;AAAA;AAGjC,iEAA2B;AAAA,gBAAhBC,KAAgB;;AAAA,yDACNA,KAAK,CAAClB,IADA;AAAA;;AAAA;AACzB,wEAA+B;AAAA,oBAApBA,IAAoB;;AAC7B,oBAAIA,IAAI,CAAC,CAAD,CAAJ,KAAY,GAAhB,EAAqB;AACnBqF,uBAAK,IAAIF,IAAI,CAAC8B,GAAL,CAAS,CAAT,EAAYD,KAAZ,CAAT;AACD,iBAFD,MAGK,IAAIhH,IAAI,KAAK,EAAb,EAAiB;AACpBqF,uBAAK,IAAIF,IAAI,CAAC8B,GAAL,CAAS,CAAT,EAAYD,KAAZ,CAAT;AACD;;AACDA,qBAAK;AACN;AATwB;AAAA;AAAA;AAAA;AAAA;AAU1B;AAbgC;AAAA;AAAA;AAAA;AAAA;;AAcjC,eAAO3B,KAAP;AACD,OAfD;;UAgBMS,c;AACJ,gCAAY9F,IAAZ,EAAkB;AAAA;;AAChB,eAAKA,IAAL,GAAYA,IAAI,CAACsB,KAAL,EAAZ;AACD;;;;iBACD,gBAAO;AACL,gBAAI,KAAKtB,IAAL,CAAUV,MAAV,GAAmB,CAAvB,EAA0B;AACxB,qBAAO,KAAKU,IAAL,CAAUkH,KAAV,EAAP;AACD;;AACD,mBAAO,EAAP;AACD;;;;;;AAGH,UAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,EAAD,EAAKC,IAAL,EAAc;AAC7B,YAAIA,IAAI,IAAID,EAAZ,EAAgB;AACd,iBAAOA,EAAE,CAACC,IAAD,CAAT;AACD;;AACD,YAAID,EAAE,CAACE,YAAH,CAAgBD,IAAhB,CAAJ,EAA2B;AACzB,iBAAOD,EAAE,CAACG,YAAH,CAAgBF,IAAhB,CAAP;AACD;;AACD,eAAO,IAAP;AACD,OARD;;AASA,UAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAAC9G,IAAD,EAAU;AAC9B,eAAO+G,KAAK,CAACtE,IAAN,CAAWzC,IAAI,CAACgH,QAAhB,EACJzH,MADI,CACG,UAAAmH,EAAE;AAAA,iBAAIA,EAAE,CAACO,OAAH,KAAe,oBAAnB;AAAA,SADL,EAEJxF,GAFI,CAEA,UAAAiF,EAAE,EAAI;AACX,cAAMlE,EAAE,GAAGiE,QAAQ,CAACC,EAAD,EAAK,IAAL,CAAnB;AACA,iBAAO;AACLjE,gBAAI,EAAEtC,SAAS,CAACsG,QAAQ,CAACC,EAAD,EAAK,MAAL,CAAT,CAAT,CAAgCrH,QADjC;AAELmD,cAAE,EAAEA,EAAE,IAAI,IAAN,GAAa3C,SAAb,GAAyBM,SAAS,CAACqC,EAAD;AAFjC,WAAP;AAID,SARM,CAAP;AASD,OAVD;;AAWA,UAAM0E,UAAU,GAAG,SAAbA,UAAa,CAAClH,IAAD,EAAU;AAC3B,eAAOmH,iBAAiB,CAACC,cAAc,CAACpH,IAAD,CAAf,CAAxB;AACD,OAFD;;AAGA,UAAMoH,cAAc,GAAG,SAAjBA,cAAiB,CAAC5D,IAAD,EAAU;AAC/B,eAAOuD,KAAK,CAACtE,IAAN,CAAWe,IAAI,CAACwD,QAAhB,EACJzH,MADI,CACG,UAAAmH,EAAE;AAAA,iBAAIA,EAAE,CAACO,OAAH,KAAe,WAAf,IAA8BP,EAAE,CAACW,SAArC;AAAA,SADL,EAEJ5F,GAFI,CAEA,UAAAiF,EAAE,EAAI;AACX,cAAMW,SAAS,GAAGZ,QAAQ,CAACC,EAAD,EAAK,WAAL,CAA1B;AACA,iBAAO;AACLpH,gBAAI,EAAEa,SAAS,CAACsG,QAAQ,CAACC,EAAD,EAAK,KAAL,CAAT,CAAT,CAA+BrH,QADhC;AAEL6C,cAAE,EAAEmF,SAAS,CAACvC,WAAV,EAFC;AAGLnE,kBAAM,EAAE+F,EAAE,CAACY,cAHN;AAIL3B,uBAAW,EAAEe,EAAE,CAACf,WAJX;AAKLD,uBAAW,EAAEgB,EAAE,CAAChB,WALX;AAMLsB,oBAAQ,EAAEI,cAAc,CAACV,EAAD;AANnB,WAAP;AAQD,SAZM,CAAP;AAaD,OAdD;;AAeA,UAAMS,iBAAiB,GAAG,SAApBA,iBAAoB,CAACI,KAAD,EAAW;AACnC,YAAMvB,MAAM,GAAG,EAAf;;AADmC,qDAEhBuB,KAFgB;AAAA;;AAAA;AAEnC,oEAA0B;AAAA,gBAAf/D,IAAe;AACxBgE,uBAAW,CAAC,EAAD,EAAKxB,MAAL,EAAaxC,IAAb,CAAX;AACD;AAJkC;AAAA;AAAA;AAAA;AAAA;;AAKnC,eAAOwC,MAAP;AACD,OAND;;AAOA,UAAMwB,WAAW,GAAG,SAAdA,WAAc,CAACjH,KAAD,EAAQyF,MAAR,EAAgBxC,IAAhB,EAAyB;AAC3CjD,aAAK,GAAGA,KAAK,CAACK,KAAN,EAAR;AACAL,aAAK,CAACM,IAAN,CAAW;AACTqB,YAAE,EAAEsB,IAAI,CAACtB,EADA;AAET5C,cAAI,EAAEkE,IAAI,CAAClE,IAFF;AAGTqB,gBAAM,EAAE6C,IAAI,CAAC7C,MAHJ;AAITgF,qBAAW,EAAEnC,IAAI,CAACmC,WAJT;AAKTD,qBAAW,EAAElC,IAAI,CAACkC;AALT,SAAX;;AAOA,YAAIlC,IAAI,CAACwD,QAAL,CAAcpI,MAAd,KAAyB,CAA7B,EAAgC;AAC9BoH,gBAAM,CAACnF,IAAP,CAAYN,KAAZ;AACA;AACD;;AAZ0C,qDAavBiD,IAAI,CAACwD,QAbkB;AAAA;;AAAA;AAa3C,oEAAmC;AAAA,gBAAxBS,KAAwB;AACjCD,uBAAW,CAACjH,KAAD,EAAQyF,MAAR,EAAgByB,KAAhB,CAAX;AACD;AAf0C;AAAA;AAAA;AAAA;AAAA;AAgB5C,OAhBD;;AAkBA,UAAMC,MAAM;AACV,wBAAYxJ,OAAZ,EAAqB;AAAA;;AACnB,uEAAiB,IAAjB,EAAuBA,OAAvB;AACA,eAAKyJ,kBAAL,GAA0B,6DAAY,IAAZ,EAAkB,oBAAlB,EAAwC,CAAxC,CAA1B;AACA,eAAKC,iBAAL,GAAyB,6DAAY,IAAZ,EAAkB,mBAAlB,EAAuC,CAAvC,CAAzB;AACA,eAAKC,YAAL,GAAoB,IAApB;AACA,eAAKC,IAAL,GAAY,KAAZ;AACA,eAAK5H,KAAL,GAAa,CAAb;AACA,eAAK6H,SAAL,GAAiB,CAAjB;AACA;;;;;AAIA,eAAK/H,IAAL,GAAY,GAAZ;AACA;;;;;;;;;;;;;;;AAcA,eAAKL,OAAL,GAAe,IAAf;AACD;;AA7BS;AAAA;AAAA;AAAA,gGA8BV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACQ+D,gBAAgB,EADxB;;AAAA;AAAA;AAAA,2BAE2B,KAAKsE,SAAL,CAAe,KAAKC,OAAL,EAAf,CAF3B;;AAAA;AAEQC,8BAFR;;AAAA,0BAGMA,UAAU,KAAK,IAHrB;AAAA;AAAA;AAAA;;AAAA,0BAIQ,OAAOA,UAAP,KAAsB,QAJ9B;AAAA;AAAA;AAAA;;AAKc3F,4BALd,GAK2B2F,UAL3B,CAKc3F,QALd;AAMYjD,wBANZ,GAMmBa,SAAS,CAACoC,QAAD,CAN5B;AAOM,yBAAK4F,OAAL,CAAa7I,IAAI,CAACD,QAAlB,EAA4BJ,kBAA5B,EAAgDK,IAAI,CAACM,WAArD;AAPN;AAAA,2BAQY,KAAKwI,iBAAL,CAAuB9I,IAAI,CAACD,QAA5B,EAAsCJ,kBAAtC,CARZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,2BAYU,KAAKoJ,eAAL,EAZV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA9BU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBA6CV,4BAAmB;AACjBxE,kBAAM,CAACC,gBAAP,CAAwB,yBAAxB,EAAmD,+DAAS,KAAKwE,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAT,EAA4C,EAA5C,CAAnD;AACA1E,kBAAM,CAACC,gBAAP,CAAwB,qBAAxB,EAA+C,+DAAS,KAAKuE,eAAL,CAAqBE,IAArB,CAA0B,IAA1B,CAAT,EAA0C,GAA1C,CAA/C;AACD;AAhDS;AAAA;AAAA;AAAA,yFAiDV;AAAA;AAAA;AAAA;AAAA;AACQtI,6BADR,GACoB,KAAKuI,gBAAL,EADpB;AAEMnJ,4BAFN,GAEiB,KAAK4I,OAAL,EAFjB;AAAA;AAAA,2BAG2B,KAAKD,SAAL,CAAe3I,QAAf,CAH3B;;AAAA;AAGQ6I,8BAHR;;AAAA,0BAIMA,UAAU,KAAK,IAJrB;AAAA;AAAA;AAAA;;AAAA,0BAKQ,OAAOA,UAAP,KAAsB,QAL9B;AAAA;AAAA;AAAA;;AAMM7I,4BAAQ,GAAGc,SAAS,CAAC+H,UAAU,CAAC3F,QAAZ,CAAT,CAA+BlD,QAA1C;AANN;AAAA;;AAAA;AAAA,sDASa,KATb;;AAAA;AAAA,sDAYS,KAAK+I,iBAAL,CAAuB/I,QAAvB,EAAiCY,SAAjC,CAZT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjDU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBA+DV,sBAAawI,EAAb,EAAiB;AAAA;;AACfA,cAAE,CAACC,MAAH,CAAUC,QAAV,CAAmB,CAAnB,EAAsB,UAAAC,kBAAkB,EAAI;AAC1C,mBAAI,CAACC,IAAL;;AACAD,gCAAkB;AACnB,aAHD;AAID;AACD;;AArEU;AAAA;AAAA;AAAA,4FAsEV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAC2B,KAAKZ,SAAL,EAD3B;;AAAA;AACQE,8BADR;;AAAA,0BAEMA,UAAU,KAAK,IAFrB;AAAA;AAAA;AAAA;;AAAA,0BAGQ,OAAOA,UAAP,KAAsB,QAH9B;AAAA;AAAA;AAAA;;AAAA,sDAIaA,UAAU,CAAC3F,QAJxB;;AAAA;AAAA,sDAOa,KAPb;;AAAA;AAAA,sDAUS,IAVT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAtEU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkFV;;;;;;;AAlFU;AAAA;AAAA;AAAA,mFAwFV,kBAAWnE,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgB6B,6BAAhB,8DAA4B,SAA5B;AAAuC4C,6BAAvC;;AACE,wBAAIzE,GAAG,CAAC0K,UAAJ,CAAe,GAAf,CAAJ,EAAyB;AACvB1K,yBAAG,GAAI,IAAI2K,GAAJ,CAAQ3K,GAAR,EAAayF,MAAM,CAACmF,QAAP,CAAgBC,IAA7B,CAAD,CAAqC9H,QAA3C;AACD;;AACG+H,8BAJN,GAImB/I,SAAS,CAAC/B,GAAD,CAJ5B;AAAA;AAAA,2BAK2B,KAAK4J,SAAL,CAAekB,UAAU,CAAC7J,QAA1B,CAL3B;;AAAA;AAKQ6I,8BALR;;AAAA,0BAMMA,UAAU,KAAK,IANrB;AAAA;AAAA;AAAA;;AAAA,0BAOQ,OAAOA,UAAP,KAAsB,QAP9B;AAAA;AAAA;AAAA;;AAQMgB,8BAAU,GAAG/I,SAAS,CAAC+H,UAAU,CAAC3F,QAAZ,CAAtB;AARN;AAAA;;AAAA;AAAA,sDAWa,KAXb;;AAAA;AAcE,yBAAK4F,OAAL,CAAae,UAAU,CAAC7J,QAAxB,EAAkCY,SAAlC,EAA6CiJ,UAAU,CAACtJ,WAAxD;AAdF,sDAeS,KAAKwI,iBAAL,CAAuBc,UAAU,CAAC7J,QAAlC,EAA4CY,SAA5C,EAAuD4C,SAAvD,CAfT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAxFU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyGV;;;;AAzGU;AAAA;AAAA,iBA4GV,gBAAO;AACLgB,kBAAM,CAAC9D,OAAP,CAAe8I,IAAf;AACA,mBAAO7F,OAAO,CAACC,OAAR,CAAgB,KAAKkG,WAArB,CAAP;AACD;AACD;;AAhHU;AAAA;AAAA;AAAA,yFAiHV;AAAA;AAAA;AAAA;AACExH,+BAAW,CAACuF,UAAU,CAAC,KAAKR,EAAN,CAAX,CAAX;AACArE,kCAAc,CAACyE,aAAa,CAAC,KAAKJ,EAAN,CAAd,CAAd;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aAjHU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqHV;;AArHU;AAAA;AAAA;AAAA,yFAsHV,kBAAiBzG,SAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA,yBACM,KAAK6H,IADX;AAAA;AAAA;AAAA;;AAEIjG,2BAAO,CAACuH,IAAR,CAAa,uDAAb;AAFJ,sDAGW,KAHX;;AAAA;AAAA;AAAA,2BAKgC7F,YAAY,CAACM,MAAM,CAACF,QAAP,CAAgBC,IAAjB,CAL5C;;AAAA;AAAA;AAKU3B,uBALV,uBAKUA,GALV;AAKea,0BALf,uBAKeA,MALf;AAMQlB,0BANR,GAMiBsF,UAAU,CAAC,KAAKR,EAAN,CAN3B;AAOQnG,yBAPR,GAOgBwF,gBAAgB,CAAC9D,GAAD,EAAML,MAAN,CAPhC;;AAAA,wBAQOrB,KARP;AAAA;AAAA;AAAA;;AASIsB,2BAAO,CAACuH,IAAR,CAAa,mCAAb,EAAkDnH,GAAG,CAACR,GAAJ,CAAQ,UAAAT,CAAC;AAAA,6BAAIA,CAAC,CAACkB,EAAN;AAAA,qBAAT,CAAlD;AATJ,sDAUW,KAVX;;AAAA;AAYQ5C,wBAZR,GAYegB,WAAW,CAACC,KAAD,CAZ1B;;AAAA,wBAaOjB,IAbP;AAAA;AAAA;AAAA;;AAcIuC,2BAAO,CAACuH,IAAR,CAAa,iFAAb;AAdJ,sDAeW,KAfX;;AAAA;AAiBE,yBAAKjB,OAAL,CAAa7I,IAAb,EAAmBW,SAAnB;AAjBF;AAAA,2BAkBQ,KAAKoJ,iBAAL,CAAuBvG,MAAvB,EAA+BvC,KAA/B,EAAsCtB,kBAAtC,EAA0DK,IAA1D,EAAgE,IAAhE,EAAsE2C,GAAG,CAACrD,MAA1E,CAlBR;;AAAA;AAAA,sDAmBS,IAnBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAtHU;;AAAA;AAAA;AAAA;;AAAA;AAAA,cA2IV;;AA3IU;AAAA;AAAA,iBA4IV,6BAAoB;AAClB,gBAAMU,IAAI,GAAG,KAAK2I,OAAL,EAAb;;AACA,gBAAI3I,IAAI,IAAI+E,iBAAiB,CAAC/E,IAAD,EAAOwH,aAAa,CAAC,KAAKJ,EAAN,CAApB,CAA7B,EAA6D;AAC3D,mBAAK0B,iBAAL,CAAuB9I,IAAvB,EAA6BL,kBAA7B;AACD;AACF,WAjJS,CAkJV;;AAlJU;AAAA;AAAA,iBAmJV,2BAAkB;AAChB,mBAAO,KAAKmJ,iBAAL,CAAuB,KAAKH,OAAL,EAAvB,EAAuChJ,kBAAvC,CAAP;AACD;AArJS;AAAA;AAAA,iBAsJV,4BAAmB;AACjB,gBAAIqK,EAAJ;;AACA,gBAAMC,GAAG,GAAG1F,MAAZ;;AACA,gBAAI0F,GAAG,CAACxJ,OAAJ,CAAYG,KAAZ,KAAsB,IAA1B,EAAgC;AAC9B,mBAAKA,KAAL;AACAqJ,iBAAG,CAACxJ,OAAJ,CAAYM,YAAZ,CAAyB,KAAKH,KAA9B,EAAqCqJ,GAAG,CAAC5F,QAAJ,CAAa6F,KAAlD,EAAyD,CAACF,EAAE,GAAGC,GAAG,CAAC5F,QAAJ,CAAaqF,QAAnB,MAAiC,IAAjC,IAAyCM,EAAE,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,EAAE,CAACL,IAA9H;AACD;;AACD,gBAAM/I,KAAK,GAAGqJ,GAAG,CAACxJ,OAAJ,CAAYG,KAA1B;AACA,gBAAM6H,SAAS,GAAG,KAAKA,SAAvB;AACA,iBAAKA,SAAL,GAAiB7H,KAAjB;;AACA,gBAAIA,KAAK,GAAG6H,SAAR,IAAsB7H,KAAK,IAAI6H,SAAT,IAAsBA,SAAS,GAAG,CAA5D,EAAgE;AAC9D,qBAAO7I,qBAAP;AACD;;AACD,gBAAIgB,KAAK,GAAG6H,SAAZ,EAAuB;AACrB,qBAAO5I,kBAAP;AACD;;AACD,mBAAOF,kBAAP;AACD;AAvKS;AAAA;AAAA;AAAA,gGAwKV,kBAAwBK,IAAxB,EAA8BW,SAA9B,EAAyC4C,SAAzC;AAAA;;AAAA;AAAA;AAAA;AAAA,wBACOvD,IADP;AAAA;AAAA;AAAA;;AAEIuC,2BAAO,CAACyB,KAAR,CAAc,iDAAd;AAFJ,sDAGW,KAHX;;AAAA;AAKE;AACMhB,6BANR,GAMoBwE,aAAa,CAAC,KAAKJ,EAAN,CANjC;AAOQnE,4BAPR,GAOmB8B,iBAAiB,CAAC/E,IAAD,EAAOgD,SAAP,CAPpC;AAQMmH,gCARN,GAQqB,IARrB;;AASE,wBAAIlH,QAAJ,EAAc;AAAA,qCACsBA,QAAQ,CAACC,EAD/B,EACJnD,QADI,gBACJA,QADI,EACMO,WADN,gBACMA,WADN;AAEZ,2BAAKuI,OAAL,CAAa9I,QAAb,EAAuBY,SAAvB,EAAkCL,WAAlC;AACA6J,kCAAY,GAAGlH,QAAQ,CAACE,IAAxB;AACAnD,0BAAI,GAAGD,QAAP;AACD,qBAdH,CAeE;;;AACMuC,0BAhBR,GAgBiBsF,UAAU,CAAC,KAAKR,EAAN,CAhB3B;AAiBQnG,yBAjBR,GAiBgB4F,iBAAiB,CAAC7G,IAAD,EAAOsC,MAAP,CAjBjC;;AAAA,wBAkBOrB,KAlBP;AAAA;AAAA;AAAA;;AAmBIsB,2BAAO,CAACyB,KAAR,CAAc,gDAAd;AAnBJ,sDAoBW,KApBX;;AAAA;AAAA,sDAuBS,KAAK+F,iBAAL,CAAuB1F,QAAQ,CAACC,IAAhC,EAAsCrD,KAAtC,EAA6CN,SAA7C,EAAwDX,IAAxD,EAA8DmK,YAA9D,EAA4E,CAA5E,EAA+E5G,SAA/E,CAvBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAxKU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gGAiMV,mBAAwBW,IAAxB,EAA8BjD,KAA9B,EAAqCN,SAArC,EAAgDX,IAAhD,EAAsDmK,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE9G,yBAApE,iEAA4E,CAA5E;AAA+EE,6BAA/E;AAAA;AAAA,2BACuB,KAAK6G,IAAL,EADvB;;AAAA;AACQC,0BADR;AAEM/G,2BAFN,GAEgB,KAFhB;AAAA;AAAA;AAAA,2BAIoB,KAAKF,aAAL,CAAmBc,IAAnB,EAAyBjD,KAAzB,EAAgCN,SAAhC,EAA2CX,IAA3C,EAAiDmK,YAAjD,EAA+D9G,KAA/D,EAAsEE,SAAtE,CAJpB;;AAAA;AAIID,2BAJJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOIf,2BAAO,CAACyB,KAAR;;AAPJ;AASEqG,0BAAM;AATR,uDAUS/G,OAVT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjMU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFA6MV;AAAA;AAAA;AAAA;AAAA;AACQgH,qBADR,GACY,KAAKT,WADjB;AAGE,yBAAKA,WAAL,GAAmB,IAAInG,OAAJ,CAAY,UAAAhB,CAAC;AAAA,6BAAIiB,OAAO,GAAGjB,CAAd;AAAA,qBAAb,CAAnB;;AAHF,0BAIM4H,CAAC,KAAK/J,SAJZ;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAKU+J,CALV;;AAAA;AAAA,uDAOS3G,OAPT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA7MU;;AAAA;AAAA;AAAA;;AAAA;AAAA,cAsNV;AACA;AACA;AACA;;AAzNU;AAAA;AAAA;AAAA,wFA0NV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgBT,sBAAhB,iEAAqB,KAAKyF,OAAL,EAArB;AAAqCxF,wBAArC;;AACE,wBAAIA,IAAI,KAAK5C,SAAb,EAAwB;AACtB4C,0BAAI,GAAGtC,SAAS,CAAC,KAAK0H,YAAN,CAAT,CAA6BxI,QAApC;AACD;;AAHH,0BAIM,CAACmD,EAAD,IAAO,CAACC,IAJd;AAAA;AAAA;AAAA;;AAAA,uDAKW,IALX;;AAAA;AAOQb,0BAPR,GAOiBsF,UAAU,CAAC,KAAKR,EAAN,CAP3B;AAQQmD,6BARR,GAQoB1D,iBAAiB,CAAC1D,IAAD,EAAOb,MAAP,CARrC;AASQkI,mCATR,GAS0BD,SAAS,IAAIA,SAAS,CAACA,SAAS,CAACjL,MAAV,GAAmB,CAApB,CAAT,CAAgC+G,WATvE;;AAAA,yBAUmBmE,eAVnB;AAAA;AAAA;AAAA;;AAAA;AAAA,2BAU2CA,eAAe,EAV1D;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,oCAU+D,IAV/D;;AAAA;AAUQC,4BAVR;;AAAA,0BAWMA,QAAQ,KAAK,KAAb,IAAsB,OAAOA,QAAP,KAAoB,QAXhD;AAAA;AAAA;AAAA;;AAAA,uDAYWA,QAZX;;AAAA;AAcQC,2BAdR,GAckB7D,iBAAiB,CAAC3D,EAAD,EAAKZ,MAAL,CAdnC;AAeQqI,mCAfR,GAe0BD,OAAO,IAAIA,OAAO,CAACA,OAAO,CAACpL,MAAR,GAAiB,CAAlB,CAAP,CAA4B8G,WAfjE;AAAA,uDAgBSuE,eAAe,GAAGA,eAAe,EAAlB,GAAuB,IAhB/C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA1NU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FA4OV,mBAAoBzG,IAApB,EAA0BjD,KAA1B,EAAiCN,SAAjC,EAA4CX,IAA5C,EAAkDmK,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgE9G,yBAAhE,iEAAwE,CAAxE;AAA2EE,6BAA3E;;AAAA,yBACM,KAAKiF,IADX;AAAA;AAAA;AAAA;;AAEIjG,2BAAO,CAACuH,IAAR,CAAa,uDAAb;AAFJ,uDAGW,KAHX;;AAAA;AAKE,yBAAKtB,IAAL,GAAY,IAAZ,CALF,CAME;;AACMoC,8BAPR,GAOqB,KAAKC,gBAAL,CAAsB7K,IAAtB,EAA4BmK,YAA5B,CAPrB;;AAQE,wBAAIS,UAAJ,EAAgB;AACd,2BAAKvC,kBAAL,CAAwBrJ,IAAxB,CAA6B4L,UAA7B;AACD;;AAVH;AAAA,2BAWwBxH,cAAa,CAACc,IAAD,EAAOjD,KAAP,EAAcN,SAAd,EAAyB0C,KAAzB,EAAgC,KAAhC,EAAuCE,SAAvC,CAXrC;;AAAA;AAWQD,2BAXR;AAYE,yBAAKkF,IAAL,GAAY,KAAZ,CAZF,CAaE;;AACA,wBAAIoC,UAAJ,EAAgB;AACd,2BAAKtC,iBAAL,CAAuBtJ,IAAvB,CAA4B4L,UAA5B;AACD;;AAhBH,uDAiBStH,OAjBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aA5OU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBA+PV,iBAAQtD,IAAR,EAAcW,SAAd,EAAyBL,WAAzB,EAAsC;AACpC,iBAAKM,KAAL;AACAJ,qBAAS,CAAC+D,MAAM,CAAC9D,OAAR,EAAiB,KAAKC,IAAtB,EAA4B,KAAKL,OAAjC,EAA0CL,IAA1C,EAAgDW,SAAhD,EAA2D,KAAKC,KAAhE,EAAuEN,WAAvE,CAAT;AACD;AAlQS;AAAA;AAAA,iBAmQV,mBAAU;AACR,mBAAOqB,QAAQ,CAAC4C,MAAM,CAACmF,QAAR,EAAkB,KAAKhJ,IAAvB,EAA6B,KAAKL,OAAlC,CAAf;AACD;AArQS;AAAA;AAAA,iBAsQV,0BAAiBL,IAAjB,EAAuB8K,gBAAvB,EAAyC;AACvC,gBAAM3H,IAAI,GAAG,KAAKoF,YAAlB;AACA,gBAAMrF,EAAE,GAAGpD,YAAY,CAACE,IAAD,CAAvB;AACA,iBAAKuI,YAAL,GAAoBrF,EAApB;;AACA,gBAAIA,EAAE,KAAKC,IAAX,EAAiB;AACf,qBAAO,IAAP;AACD;;AACD,gBAAM4H,cAAc,GAAGD,gBAAgB,GAAGhL,YAAY,CAACgL,gBAAD,CAAf,GAAoC,IAA3E;AACA,mBAAO;AACL3H,kBAAI,EAAJA,IADK;AAEL4H,4BAAc,EAAdA,cAFK;AAGL7H,gBAAE,EAAFA;AAHK,aAAP;AAKD;AAnRS;AAAA;AAAA,eAoRV,eAAS;AAAE,mBAAO,6DAAW,IAAX,CAAP;AAA0B;AApR3B;;AAAA;AAAA,SAAZ;;AAuRA,UAAM8H,aAAa,GAAG,6ZAAtB;;AAEA,UAAMC,UAAU;AACd,4BAAYrM,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,uEAAiB,IAAjB,EAAuBA,OAAvB;AACA;;;;;AAIA,eAAKsM,eAAL,GAAuB,SAAvB;;AACA,eAAKC,OAAL,GAAe,UAAChC,EAAD,EAAQ;AACrB,yEAAQ,MAAI,CAACQ,IAAb,EAAmBR,EAAnB,EAAuB,MAAI,CAAC+B,eAA5B,EAA6C,MAAI,CAACE,eAAlD;AACD,WAFD;AAGD;;AAXa;AAAA;AAAA,iBAYd,kBAAS;AAAA;;AACP,gBAAMC,IAAI,GAAG,oEAAW,IAAX,CAAb;AACA,gBAAMC,KAAK,GAAG;AACZ3B,kBAAI,EAAE,KAAKA,IADC;AAEZ4B,iBAAG,EAAE,KAAKA,GAFE;AAGZC,oBAAM,EAAE,KAAKA;AAHD,aAAd;AAKA,mBAAQ,6DAAE,oDAAF,EAAQ;AAAEL,qBAAO,EAAE,KAAKA,OAAhB;AAAyB,uBAAO,6DAAmB,KAAKM,KAAxB,0CAC3CJ,IAD2C,EACpC,IADoC,4BAE5C,iBAF4C,EAEzB,IAFyB;AAAhC,aAAR,EAGA,6DAAE,GAAF,EAAOlM,MAAM,CAACqH,MAAP,CAAc,EAAd,EAAkB8E,KAAlB,CAAP,EAAiC,6DAAE,MAAF,EAAU,IAAV,CAAjC,CAHA,CAAR;AAID;AAvBa;;AAAA;AAAA,SAAhB;;AAyBAL,gBAAU,CAACS,KAAX,GAAmBV,aAAnB","file":"29-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, i as getElement, h, H as Host } from './index-7a8b7a1c.js';\r\nimport { c as componentOnReady, o as debounce } from './helpers-1457892a.js';\r\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\r\nimport { o as openURL, c as createColorClasses } from './theme-ff3fc52f.js';\r\n\r\nconst Route = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\r\n    /**\r\n     * Relative path that needs to match in order for this route to apply.\r\n     *\r\n     * Accepts paths similar to expressjs so that you can define parameters\r\n     * in the url /foo/:bar where bar would be available in incoming props.\r\n     */\r\n    this.url = '';\r\n  }\r\n  onUpdate(newValue) {\r\n    this.ionRouteDataChanged.emit(newValue);\r\n  }\r\n  onComponentProps(newValue, oldValue) {\r\n    if (newValue === oldValue) {\r\n      return;\r\n    }\r\n    const keys1 = newValue ? Object.keys(newValue) : [];\r\n    const keys2 = oldValue ? Object.keys(oldValue) : [];\r\n    if (keys1.length !== keys2.length) {\r\n      this.onUpdate(newValue);\r\n      return;\r\n    }\r\n    for (const key of keys1) {\r\n      if (newValue[key] !== oldValue[key]) {\r\n        this.onUpdate(newValue);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  connectedCallback() {\r\n    this.ionRouteDataChanged.emit();\r\n  }\r\n  static get watchers() { return {\r\n    \"url\": [\"onUpdate\"],\r\n    \"component\": [\"onUpdate\"],\r\n    \"componentProps\": [\"onComponentProps\"]\r\n  }; }\r\n};\r\n\r\nconst RouteRedirect = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\r\n  }\r\n  propDidChange() {\r\n    this.ionRouteRedirectChanged.emit();\r\n  }\r\n  connectedCallback() {\r\n    this.ionRouteRedirectChanged.emit();\r\n  }\r\n  static get watchers() { return {\r\n    \"from\": [\"propDidChange\"],\r\n    \"to\": [\"propDidChange\"]\r\n  }; }\r\n};\r\n\r\nconst ROUTER_INTENT_NONE = 'root';\r\nconst ROUTER_INTENT_FORWARD = 'forward';\r\nconst ROUTER_INTENT_BACK = 'back';\r\n\r\n// Join the non empty segments with \"/\".\r\nconst generatePath = (segments) => {\r\n  const path = segments\r\n    .filter(s => s.length > 0)\r\n    .join('/');\r\n  return '/' + path;\r\n};\r\nconst generateUrl = (segments, useHash, queryString) => {\r\n  let url = generatePath(segments);\r\n  if (useHash) {\r\n    url = '#' + url;\r\n  }\r\n  if (queryString !== undefined) {\r\n    url += '?' + queryString;\r\n  }\r\n  return url;\r\n};\r\nconst writePath = (history, root, useHash, path, direction, state, queryString) => {\r\n  const url = generateUrl([...parsePath(root).segments, ...path], useHash, queryString);\r\n  if (direction === ROUTER_INTENT_FORWARD) {\r\n    history.pushState(state, '', url);\r\n  }\r\n  else {\r\n    history.replaceState(state, '', url);\r\n  }\r\n};\r\nconst chainToPath = (chain) => {\r\n  const path = [];\r\n  for (const route of chain) {\r\n    for (const segment of route.path) {\r\n      if (segment[0] === ':') {\r\n        const param = route.params && route.params[segment.slice(1)];\r\n        if (!param) {\r\n          return null;\r\n        }\r\n        path.push(param);\r\n      }\r\n      else if (segment !== '') {\r\n        path.push(segment);\r\n      }\r\n    }\r\n  }\r\n  return path;\r\n};\r\n// Remove the prefix segments from the path segments.\r\n//\r\n// Return:\r\n// - null when the path segments do not start with the passed prefix,\r\n// - the path segments after the prefix otherwise.\r\nconst removePrefix = (prefix, path) => {\r\n  if (prefix.length > path.length) {\r\n    return null;\r\n  }\r\n  if (prefix.length <= 1 && prefix[0] === '') {\r\n    return path;\r\n  }\r\n  for (let i = 0; i < prefix.length; i++) {\r\n    if (prefix[i] !== path[i]) {\r\n      return null;\r\n    }\r\n  }\r\n  if (path.length === prefix.length) {\r\n    return [''];\r\n  }\r\n  return path.slice(prefix.length);\r\n};\r\nconst readPath = (loc, root, useHash) => {\r\n  const prefix = parsePath(root).segments;\r\n  const pathname = useHash ? loc.hash.slice(1) : loc.pathname;\r\n  const path = parsePath(pathname).segments;\r\n  return removePrefix(prefix, path);\r\n};\r\n// Parses the path to:\r\n// - segments an array of '/' separated parts,\r\n// - queryString (undefined when no query string).\r\nconst parsePath = (path) => {\r\n  let segments = [''];\r\n  let queryString;\r\n  if (path != null) {\r\n    const qsStart = path.indexOf('?');\r\n    if (qsStart > -1) {\r\n      queryString = path.substr(qsStart + 1);\r\n      path = path.substr(0, qsStart);\r\n    }\r\n    segments = path.split('/')\r\n      .map(s => s.trim())\r\n      .filter(s => s.length > 0);\r\n    if (segments.length === 0) {\r\n      segments = [''];\r\n    }\r\n  }\r\n  return { segments, queryString };\r\n};\r\n\r\nconst printRoutes = (routes) => {\r\n  console.group(`[ion-core] ROUTES[${routes.length}]`);\r\n  for (const chain of routes) {\r\n    const path = [];\r\n    chain.forEach(r => path.push(...r.path));\r\n    const ids = chain.map(r => r.id);\r\n    console.debug(`%c ${generatePath(path)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\r\n  }\r\n  console.groupEnd();\r\n};\r\nconst printRedirects = (redirects) => {\r\n  console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\r\n  for (const redirect of redirects) {\r\n    if (redirect.to) {\r\n      console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to.segments)}`, 'font-weight: bold');\r\n    }\r\n  }\r\n  console.groupEnd();\r\n};\r\n\r\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\r\n  try {\r\n    // find next navigation outlet in the DOM\r\n    const outlet = searchNavNode(root);\r\n    // make sure we can continue interacting the DOM, otherwise abort\r\n    if (index >= chain.length || !outlet) {\r\n      return changed;\r\n    }\r\n    await new Promise(resolve => componentOnReady(outlet, resolve));\r\n    const route = chain[index];\r\n    const result = await outlet.setRouteId(route.id, route.params, direction, animation);\r\n    // if the outlet changed the page, reset navigation to neutral (no direction)\r\n    // this means nested outlets will not animate\r\n    if (result.changed) {\r\n      direction = ROUTER_INTENT_NONE;\r\n      changed = true;\r\n    }\r\n    // recursively set nested outlets\r\n    changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\r\n    // once all nested outlets are visible let's make the parent visible too,\r\n    // using markVisible prevents flickering\r\n    if (result.markVisible) {\r\n      await result.markVisible();\r\n    }\r\n    return changed;\r\n  }\r\n  catch (e) {\r\n    console.error(e);\r\n    return false;\r\n  }\r\n};\r\nconst readNavState = async (root) => {\r\n  const ids = [];\r\n  let outlet;\r\n  let node = root;\r\n  // tslint:disable-next-line:no-constant-condition\r\n  while (true) {\r\n    outlet = searchNavNode(node);\r\n    if (outlet) {\r\n      const id = await outlet.getRouteId();\r\n      if (id) {\r\n        node = id.element;\r\n        id.element = undefined;\r\n        ids.push(id);\r\n      }\r\n      else {\r\n        break;\r\n      }\r\n    }\r\n    else {\r\n      break;\r\n    }\r\n  }\r\n  return { ids, outlet };\r\n};\r\nconst waitUntilNavNode = () => {\r\n  if (searchNavNode(document.body)) {\r\n    return Promise.resolve();\r\n  }\r\n  return new Promise(resolve => {\r\n    window.addEventListener('ionNavWillLoad', resolve, { once: true });\r\n  });\r\n};\r\nconst QUERY = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\r\nconst searchNavNode = (root) => {\r\n  if (!root) {\r\n    return undefined;\r\n  }\r\n  if (root.matches(QUERY)) {\r\n    return root;\r\n  }\r\n  const outlet = root.querySelector(QUERY);\r\n  return outlet !== null && outlet !== void 0 ? outlet : undefined;\r\n};\r\n\r\n// Returns whether the given redirect matches the given path segments.\r\n//\r\n// A redirect matches when the segments of the path and redirect.from are equal.\r\n// Note that segments are only checked until redirect.from contains a '*' which matches any path segment.\r\n// The path ['some', 'path', 'to', 'page'] matches both ['some', 'path', 'to', 'page'] and ['some', 'path', '*'].\r\nconst matchesRedirect = (path, redirect) => {\r\n  const { from, to } = redirect;\r\n  if (to === undefined) {\r\n    return false;\r\n  }\r\n  if (from.length > path.length) {\r\n    return false;\r\n  }\r\n  for (let i = 0; i < from.length; i++) {\r\n    const expected = from[i];\r\n    if (expected === '*') {\r\n      return true;\r\n    }\r\n    if (expected !== path[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return from.length === path.length;\r\n};\r\n// Returns the first redirect matching the path segments or undefined when no match found.\r\nconst findRouteRedirect = (path, redirects) => {\r\n  return redirects.find(redirect => matchesRedirect(path, redirect));\r\n};\r\nconst matchesIDs = (ids, chain) => {\r\n  const len = Math.min(ids.length, chain.length);\r\n  let score = 0;\r\n  for (let i = 0; i < len; i++) {\r\n    const routeId = ids[i];\r\n    const routeChain = chain[i];\r\n    // Skip results where the route id does not match the chain at the same index\r\n    if (routeId.id.toLowerCase() !== routeChain.id) {\r\n      break;\r\n    }\r\n    if (routeId.params) {\r\n      const routeIdParams = Object.keys(routeId.params);\r\n      /**\r\n       * Only compare routes with the chain that have the same number of parameters.\r\n       */\r\n      if (routeIdParams.length === routeChain.path.length) {\r\n        /**\r\n         * Maps the route's params into a path based on the path variable names,\r\n         * to compare against the route chain format.\r\n         *\r\n         * Before:\r\n         * ```ts\r\n         * {\r\n         *  params: {\r\n         *    s1: 'a',\r\n         *    s2: 'b'\r\n         *  }\r\n         * }\r\n         * ```\r\n         *\r\n         * After:\r\n         * ```ts\r\n         * [':s1',':s2']\r\n         * ```\r\n         */\r\n        const pathWithParams = routeIdParams.map(key => `:${key}`);\r\n        for (let j = 0; j < pathWithParams.length; j++) {\r\n          // Skip results where the path variable is not a match\r\n          if (pathWithParams[j].toLowerCase() !== routeChain.path[j]) {\r\n            break;\r\n          }\r\n          // Weight path matches for the same index higher.\r\n          score++;\r\n        }\r\n      }\r\n    }\r\n    // Weight id matches\r\n    score++;\r\n  }\r\n  return score;\r\n};\r\nconst matchesPath = (inputPath, chain) => {\r\n  const segments = new RouterSegments(inputPath);\r\n  let matchesDefault = false;\r\n  let allparams;\r\n  for (let i = 0; i < chain.length; i++) {\r\n    const path = chain[i].path;\r\n    if (path[0] === '') {\r\n      matchesDefault = true;\r\n    }\r\n    else {\r\n      for (const segment of path) {\r\n        const data = segments.next();\r\n        // data param\r\n        if (segment[0] === ':') {\r\n          if (data === '') {\r\n            return null;\r\n          }\r\n          allparams = allparams || [];\r\n          const params = allparams[i] || (allparams[i] = {});\r\n          params[segment.slice(1)] = data;\r\n        }\r\n        else if (data !== segment) {\r\n          return null;\r\n        }\r\n      }\r\n      matchesDefault = false;\r\n    }\r\n  }\r\n  const matches = (matchesDefault)\r\n    ? matchesDefault === (segments.next() === '')\r\n    : true;\r\n  if (!matches) {\r\n    return null;\r\n  }\r\n  if (allparams) {\r\n    return chain.map((route, i) => ({\r\n      id: route.id,\r\n      path: route.path,\r\n      params: mergeParams(route.params, allparams[i]),\r\n      beforeEnter: route.beforeEnter,\r\n      beforeLeave: route.beforeLeave\r\n    }));\r\n  }\r\n  return chain;\r\n};\r\n// Merges the route parameter objects.\r\n// Returns undefined when both parameters are undefined.\r\nconst mergeParams = (a, b) => {\r\n  return a || b ? Object.assign(Object.assign({}, a), b) : undefined;\r\n};\r\nconst routerIDsToChain = (ids, chains) => {\r\n  let match = null;\r\n  let maxMatches = 0;\r\n  for (const chain of chains) {\r\n    const score = matchesIDs(ids, chain);\r\n    if (score > maxMatches) {\r\n      match = chain;\r\n      maxMatches = score;\r\n    }\r\n  }\r\n  if (match) {\r\n    return match.map((route, i) => ({\r\n      id: route.id,\r\n      path: route.path,\r\n      params: mergeParams(route.params, ids[i] && ids[i].params)\r\n    }));\r\n  }\r\n  return null;\r\n};\r\nconst routerPathToChain = (path, chains) => {\r\n  let match = null;\r\n  let matches = 0;\r\n  for (const chain of chains) {\r\n    const matchedChain = matchesPath(path, chain);\r\n    if (matchedChain !== null) {\r\n      const score = computePriority(matchedChain);\r\n      if (score > matches) {\r\n        matches = score;\r\n        match = matchedChain;\r\n      }\r\n    }\r\n  }\r\n  return match;\r\n};\r\nconst computePriority = (chain) => {\r\n  let score = 1;\r\n  let level = 1;\r\n  for (const route of chain) {\r\n    for (const path of route.path) {\r\n      if (path[0] === ':') {\r\n        score += Math.pow(1, level);\r\n      }\r\n      else if (path !== '') {\r\n        score += Math.pow(2, level);\r\n      }\r\n      level++;\r\n    }\r\n  }\r\n  return score;\r\n};\r\nclass RouterSegments {\r\n  constructor(path) {\r\n    this.path = path.slice();\r\n  }\r\n  next() {\r\n    if (this.path.length > 0) {\r\n      return this.path.shift();\r\n    }\r\n    return '';\r\n  }\r\n}\r\n\r\nconst readProp = (el, prop) => {\r\n  if (prop in el) {\r\n    return el[prop];\r\n  }\r\n  if (el.hasAttribute(prop)) {\r\n    return el.getAttribute(prop);\r\n  }\r\n  return null;\r\n};\r\nconst readRedirects = (root) => {\r\n  return Array.from(root.children)\r\n    .filter(el => el.tagName === 'ION-ROUTE-REDIRECT')\r\n    .map(el => {\r\n    const to = readProp(el, 'to');\r\n    return {\r\n      from: parsePath(readProp(el, 'from')).segments,\r\n      to: to == null ? undefined : parsePath(to),\r\n    };\r\n  });\r\n};\r\nconst readRoutes = (root) => {\r\n  return flattenRouterTree(readRouteNodes(root));\r\n};\r\nconst readRouteNodes = (node) => {\r\n  return Array.from(node.children)\r\n    .filter(el => el.tagName === 'ION-ROUTE' && el.component)\r\n    .map(el => {\r\n    const component = readProp(el, 'component');\r\n    return {\r\n      path: parsePath(readProp(el, 'url')).segments,\r\n      id: component.toLowerCase(),\r\n      params: el.componentProps,\r\n      beforeLeave: el.beforeLeave,\r\n      beforeEnter: el.beforeEnter,\r\n      children: readRouteNodes(el)\r\n    };\r\n  });\r\n};\r\nconst flattenRouterTree = (nodes) => {\r\n  const chains = [];\r\n  for (const node of nodes) {\r\n    flattenNode([], chains, node);\r\n  }\r\n  return chains;\r\n};\r\nconst flattenNode = (chain, chains, node) => {\r\n  chain = chain.slice();\r\n  chain.push({\r\n    id: node.id,\r\n    path: node.path,\r\n    params: node.params,\r\n    beforeLeave: node.beforeLeave,\r\n    beforeEnter: node.beforeEnter\r\n  });\r\n  if (node.children.length === 0) {\r\n    chains.push(chain);\r\n    return;\r\n  }\r\n  for (const child of node.children) {\r\n    flattenNode(chain, chains, child);\r\n  }\r\n};\r\n\r\nconst Router = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\r\n    this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\r\n    this.previousPath = null;\r\n    this.busy = false;\r\n    this.state = 0;\r\n    this.lastState = 0;\r\n    /**\r\n     * The root path to use when matching URLs. By default, this is set to \"/\", but you can specify\r\n     * an alternate prefix for all URL paths.\r\n     */\r\n    this.root = '/';\r\n    /**\r\n     * The router can work in two \"modes\":\r\n     * - With hash: `/index.html#/path/to/page`\r\n     * - Without hash: `/path/to/page`\r\n     *\r\n     * Using one or another might depend in the requirements of your app and/or where it's deployed.\r\n     *\r\n     * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\r\n     * requires additional server-side configuration in order to properly work.\r\n     *\r\n     * On the other side hash-navigation is much easier to deploy, it even works over the file protocol.\r\n     *\r\n     * By default, this property is `true`, change to `false` to allow hash-less URLs.\r\n     */\r\n    this.useHash = true;\r\n  }\r\n  async componentWillLoad() {\r\n    await waitUntilNavNode();\r\n    const canProceed = await this.runGuards(this.getPath());\r\n    if (canProceed !== true) {\r\n      if (typeof canProceed === 'object') {\r\n        const { redirect } = canProceed;\r\n        const path = parsePath(redirect);\r\n        this.setPath(path.segments, ROUTER_INTENT_NONE, path.queryString);\r\n        await this.writeNavStateRoot(path.segments, ROUTER_INTENT_NONE);\r\n      }\r\n    }\r\n    else {\r\n      await this.onRoutesChanged();\r\n    }\r\n  }\r\n  componentDidLoad() {\r\n    window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\r\n    window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\r\n  }\r\n  async onPopState() {\r\n    const direction = this.historyDirection();\r\n    let segments = this.getPath();\r\n    const canProceed = await this.runGuards(segments);\r\n    if (canProceed !== true) {\r\n      if (typeof canProceed === 'object') {\r\n        segments = parsePath(canProceed.redirect).segments;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n    return this.writeNavStateRoot(segments, direction);\r\n  }\r\n  onBackButton(ev) {\r\n    ev.detail.register(0, processNextHandler => {\r\n      this.back();\r\n      processNextHandler();\r\n    });\r\n  }\r\n  /** @internal */\r\n  async canTransition() {\r\n    const canProceed = await this.runGuards();\r\n    if (canProceed !== true) {\r\n      if (typeof canProceed === 'object') {\r\n        return canProceed.redirect;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  /**\r\n   * Navigate to the specified URL.\r\n   *\r\n   * @param url The url to navigate to.\r\n   * @param direction The direction of the animation. Defaults to `\"forward\"`.\r\n   */\r\n  async push(url, direction = 'forward', animation) {\r\n    if (url.startsWith('.')) {\r\n      url = (new URL(url, window.location.href)).pathname;\r\n    }\r\n    let parsedPath = parsePath(url);\r\n    const canProceed = await this.runGuards(parsedPath.segments);\r\n    if (canProceed !== true) {\r\n      if (typeof canProceed === 'object') {\r\n        parsedPath = parsePath(canProceed.redirect);\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n    this.setPath(parsedPath.segments, direction, parsedPath.queryString);\r\n    return this.writeNavStateRoot(parsedPath.segments, direction, animation);\r\n  }\r\n  /**\r\n   * Go back to previous page in the window.history.\r\n   */\r\n  back() {\r\n    window.history.back();\r\n    return Promise.resolve(this.waitPromise);\r\n  }\r\n  /** @internal */\r\n  async printDebug() {\r\n    printRoutes(readRoutes(this.el));\r\n    printRedirects(readRedirects(this.el));\r\n  }\r\n  /** @internal */\r\n  async navChanged(direction) {\r\n    if (this.busy) {\r\n      console.warn('[ion-router] router is busy, navChanged was cancelled');\r\n      return false;\r\n    }\r\n    const { ids, outlet } = await readNavState(window.document.body);\r\n    const routes = readRoutes(this.el);\r\n    const chain = routerIDsToChain(ids, routes);\r\n    if (!chain) {\r\n      console.warn('[ion-router] no matching URL for ', ids.map(i => i.id));\r\n      return false;\r\n    }\r\n    const path = chainToPath(chain);\r\n    if (!path) {\r\n      console.warn('[ion-router] router could not match path because some required param is missing');\r\n      return false;\r\n    }\r\n    this.setPath(path, direction);\r\n    await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, path, null, ids.length);\r\n    return true;\r\n  }\r\n  // This handler gets called when a `ion-route-redirect` component is added to the DOM or if the from or to property of such node changes.\r\n  onRedirectChanged() {\r\n    const path = this.getPath();\r\n    if (path && findRouteRedirect(path, readRedirects(this.el))) {\r\n      this.writeNavStateRoot(path, ROUTER_INTENT_NONE);\r\n    }\r\n  }\r\n  // This handler gets called when a `ion-route` component is added to the DOM or if the from or to property of such node changes.\r\n  onRoutesChanged() {\r\n    return this.writeNavStateRoot(this.getPath(), ROUTER_INTENT_NONE);\r\n  }\r\n  historyDirection() {\r\n    var _a;\r\n    const win = window;\r\n    if (win.history.state === null) {\r\n      this.state++;\r\n      win.history.replaceState(this.state, win.document.title, (_a = win.document.location) === null || _a === void 0 ? void 0 : _a.href);\r\n    }\r\n    const state = win.history.state;\r\n    const lastState = this.lastState;\r\n    this.lastState = state;\r\n    if (state > lastState || (state >= lastState && lastState > 0)) {\r\n      return ROUTER_INTENT_FORWARD;\r\n    }\r\n    if (state < lastState) {\r\n      return ROUTER_INTENT_BACK;\r\n    }\r\n    return ROUTER_INTENT_NONE;\r\n  }\r\n  async writeNavStateRoot(path, direction, animation) {\r\n    if (!path) {\r\n      console.error('[ion-router] URL is not part of the routing set');\r\n      return false;\r\n    }\r\n    // lookup redirect rule\r\n    const redirects = readRedirects(this.el);\r\n    const redirect = findRouteRedirect(path, redirects);\r\n    let redirectFrom = null;\r\n    if (redirect) {\r\n      const { segments, queryString } = redirect.to;\r\n      this.setPath(segments, direction, queryString);\r\n      redirectFrom = redirect.from;\r\n      path = segments;\r\n    }\r\n    // lookup route chain\r\n    const routes = readRoutes(this.el);\r\n    const chain = routerPathToChain(path, routes);\r\n    if (!chain) {\r\n      console.error('[ion-router] the path does not match any route');\r\n      return false;\r\n    }\r\n    // write DOM give\r\n    return this.safeWriteNavState(document.body, chain, direction, path, redirectFrom, 0, animation);\r\n  }\r\n  async safeWriteNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\r\n    const unlock = await this.lock();\r\n    let changed = false;\r\n    try {\r\n      changed = await this.writeNavState(node, chain, direction, path, redirectFrom, index, animation);\r\n    }\r\n    catch (e) {\r\n      console.error(e);\r\n    }\r\n    unlock();\r\n    return changed;\r\n  }\r\n  async lock() {\r\n    const p = this.waitPromise;\r\n    let resolve;\r\n    this.waitPromise = new Promise(r => resolve = r);\r\n    if (p !== undefined) {\r\n      await p;\r\n    }\r\n    return resolve;\r\n  }\r\n  // Executes the beforeLeave hook of the source route and the beforeEnter hook of the target route if they exist.\r\n  //\r\n  // When the beforeLeave hook does not return true (to allow navigating) then that value is returned early and the beforeEnter is executed.\r\n  // Otherwise the beforeEnterHook hook of the target route is executed.\r\n  async runGuards(to = this.getPath(), from) {\r\n    if (from === undefined) {\r\n      from = parsePath(this.previousPath).segments;\r\n    }\r\n    if (!to || !from) {\r\n      return true;\r\n    }\r\n    const routes = readRoutes(this.el);\r\n    const fromChain = routerPathToChain(from, routes);\r\n    const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\r\n    const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\r\n    if (canLeave === false || typeof canLeave === 'object') {\r\n      return canLeave;\r\n    }\r\n    const toChain = routerPathToChain(to, routes);\r\n    const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\r\n    return beforeEnterHook ? beforeEnterHook() : true;\r\n  }\r\n  async writeNavState(node, chain, direction, path, redirectFrom, index = 0, animation) {\r\n    if (this.busy) {\r\n      console.warn('[ion-router] router is busy, transition was cancelled');\r\n      return false;\r\n    }\r\n    this.busy = true;\r\n    // generate route event and emit will change\r\n    const routeEvent = this.routeChangeEvent(path, redirectFrom);\r\n    if (routeEvent) {\r\n      this.ionRouteWillChange.emit(routeEvent);\r\n    }\r\n    const changed = await writeNavState(node, chain, direction, index, false, animation);\r\n    this.busy = false;\r\n    // emit did change\r\n    if (routeEvent) {\r\n      this.ionRouteDidChange.emit(routeEvent);\r\n    }\r\n    return changed;\r\n  }\r\n  setPath(path, direction, queryString) {\r\n    this.state++;\r\n    writePath(window.history, this.root, this.useHash, path, direction, this.state, queryString);\r\n  }\r\n  getPath() {\r\n    return readPath(window.location, this.root, this.useHash);\r\n  }\r\n  routeChangeEvent(path, redirectFromPath) {\r\n    const from = this.previousPath;\r\n    const to = generatePath(path);\r\n    this.previousPath = to;\r\n    if (to === from) {\r\n      return null;\r\n    }\r\n    const redirectedFrom = redirectFromPath ? generatePath(redirectFromPath) : null;\r\n    return {\r\n      from,\r\n      redirectedFrom,\r\n      to,\r\n    };\r\n  }\r\n  get el() { return getElement(this); }\r\n};\r\n\r\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\r\n\r\nconst RouterLink = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    /**\r\n     * When using a router, it specifies the transition direction when navigating to\r\n     * another page using `href`.\r\n     */\r\n    this.routerDirection = 'forward';\r\n    this.onClick = (ev) => {\r\n      openURL(this.href, ev, this.routerDirection, this.routerAnimation);\r\n    };\r\n  }\r\n  render() {\r\n    const mode = getIonMode(this);\r\n    const attrs = {\r\n      href: this.href,\r\n      rel: this.rel,\r\n      target: this.target\r\n    };\r\n    return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\r\n        [mode]: true,\r\n        'ion-activatable': true\r\n      }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\r\n  }\r\n};\r\nRouterLink.style = routerLinkCss;\r\n\r\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\r\n"]}