{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/ion-split-pane.entry.js"],"names":["splitPaneIosCss","splitPaneMdCss","SPLIT_PANE_MAIN","SPLIT_PANE_SIDE","QUERY","SplitPane","hostRef","ionSplitPaneVisible","visible","disabled","when","detail","isPane","bind","emit","styleChildren","updateState","rmL","undefined","query","mediaQuery","length","window","matchMedia","callback","q","matches","mediaList","addListener","removeListener","element","parentElement","el","classList","contains","contentId","children","nu","childElementCount","foundMain","i","child","isMain","id","console","warn","setPaneClass","mode","toAdd","toRemove","add","remove","style","ios","md"],"mappings":"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","file":"35-es5.js","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\r\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\r\n\r\nconst splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\r\n\r\nconst splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\r\n\r\nconst SPLIT_PANE_MAIN = 'split-pane-main';\r\nconst SPLIT_PANE_SIDE = 'split-pane-side';\r\nconst QUERY = {\r\n  'xs': '(min-width: 0px)',\r\n  'sm': '(min-width: 576px)',\r\n  'md': '(min-width: 768px)',\r\n  'lg': '(min-width: 992px)',\r\n  'xl': '(min-width: 1200px)',\r\n  'never': ''\r\n};\r\nconst SplitPane = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\r\n    this.visible = false;\r\n    /**\r\n     * If `true`, the split pane will be hidden.\r\n     */\r\n    this.disabled = false;\r\n    /**\r\n     * When the split-pane should be shown.\r\n     * Can be a CSS media query expression, or a shortcut expression.\r\n     * Can also be a boolean expression.\r\n     */\r\n    this.when = QUERY['lg'];\r\n  }\r\n  visibleChanged(visible) {\r\n    const detail = { visible, isPane: this.isPane.bind(this) };\r\n    this.ionSplitPaneVisible.emit(detail);\r\n  }\r\n  connectedCallback() {\r\n    this.styleChildren();\r\n    this.updateState();\r\n  }\r\n  disconnectedCallback() {\r\n    if (this.rmL) {\r\n      this.rmL();\r\n      this.rmL = undefined;\r\n    }\r\n  }\r\n  updateState() {\r\n    if (this.rmL) {\r\n      this.rmL();\r\n      this.rmL = undefined;\r\n    }\r\n    // Check if the split-pane is disabled\r\n    if (this.disabled) {\r\n      this.visible = false;\r\n      return;\r\n    }\r\n    // When query is a boolean\r\n    const query = this.when;\r\n    if (typeof query === 'boolean') {\r\n      this.visible = query;\r\n      return;\r\n    }\r\n    // When query is a string, let's find first if it is a shortcut\r\n    const mediaQuery = QUERY[query] || query;\r\n    // Media query is empty or null, we hide it\r\n    if (mediaQuery.length === 0) {\r\n      this.visible = false;\r\n      return;\r\n    }\r\n    if (window.matchMedia) {\r\n      // Listen on media query\r\n      const callback = (q) => {\r\n        this.visible = q.matches;\r\n      };\r\n      const mediaList = window.matchMedia(mediaQuery);\r\n      mediaList.addListener(callback);\r\n      this.rmL = () => mediaList.removeListener(callback);\r\n      this.visible = mediaList.matches;\r\n    }\r\n  }\r\n  isPane(element) {\r\n    if (!this.visible) {\r\n      return false;\r\n    }\r\n    return element.parentElement === this.el\r\n      && element.classList.contains(SPLIT_PANE_SIDE);\r\n  }\r\n  styleChildren() {\r\n    const contentId = this.contentId;\r\n    const children = this.el.children;\r\n    const nu = this.el.childElementCount;\r\n    let foundMain = false;\r\n    for (let i = 0; i < nu; i++) {\r\n      const child = children[i];\r\n      const isMain = contentId !== undefined && child.id === contentId;\r\n      if (isMain) {\r\n        if (foundMain) {\r\n          console.warn('split pane cannot have more than one main node');\r\n          return;\r\n        }\r\n        foundMain = true;\r\n      }\r\n      setPaneClass(child, isMain);\r\n    }\r\n    if (!foundMain) {\r\n      console.warn('split pane does not have a specified main node');\r\n    }\r\n  }\r\n  render() {\r\n    const mode = getIonMode(this);\r\n    return (h(Host, { class: {\r\n        [mode]: true,\r\n        // Used internally for styling\r\n        [`split-pane-${mode}`]: true,\r\n        'split-pane-visible': this.visible\r\n      } }, h(\"slot\", null)));\r\n  }\r\n  get el() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"visible\": [\"visibleChanged\"],\r\n    \"disabled\": [\"updateState\"],\r\n    \"when\": [\"updateState\"]\r\n  }; }\r\n};\r\nconst setPaneClass = (el, isMain) => {\r\n  let toAdd;\r\n  let toRemove;\r\n  if (isMain) {\r\n    toAdd = SPLIT_PANE_MAIN;\r\n    toRemove = SPLIT_PANE_SIDE;\r\n  }\r\n  else {\r\n    toAdd = SPLIT_PANE_SIDE;\r\n    toRemove = SPLIT_PANE_MAIN;\r\n  }\r\n  const classList = el.classList;\r\n  classList.add(toAdd);\r\n  classList.remove(toRemove);\r\n};\r\nSplitPane.style = {\r\n  ios: splitPaneIosCss,\r\n  md: splitPaneMdCss\r\n};\r\n\r\nexport { SplitPane as ion_split_pane };\r\n"]}